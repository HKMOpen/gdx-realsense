/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.realsense;

public class PXCEmotion extends PXCBase {
  private long swigCPtr;

  protected PXCEmotion(long cPtr, boolean cMemoryOwn) {
    super(realsenseJNI.PXCEmotion_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PXCEmotion obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  static public class EmotionData {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected EmotionData(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(EmotionData obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCEmotion_EmotionData(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setTimeStamp(SWIGTYPE_p___int64 value) {
      realsenseJNI.PXCEmotion_EmotionData_timeStamp_set(swigCPtr, this, SWIGTYPE_p___int64.getCPtr(value));
    }
  
    public SWIGTYPE_p___int64 getTimeStamp() {
      return new SWIGTYPE_p___int64(realsenseJNI.PXCEmotion_EmotionData_timeStamp_get(swigCPtr, this), true);
    }
  
    public void setEmotion(PXCEmotion.Emotion value) {
      realsenseJNI.PXCEmotion_EmotionData_emotion_set(swigCPtr, this, value.swigValue());
    }
  
    public PXCEmotion.Emotion getEmotion() {
      return PXCEmotion.Emotion.swigToEnum(realsenseJNI.PXCEmotion_EmotionData_emotion_get(swigCPtr, this));
    }
  
    public void setFid(int value) {
      realsenseJNI.PXCEmotion_EmotionData_fid_set(swigCPtr, this, value);
    }
  
    public int getFid() {
      return realsenseJNI.PXCEmotion_EmotionData_fid_get(swigCPtr, this);
    }
  
    public void setEid(PXCEmotion.Emotion value) {
      realsenseJNI.PXCEmotion_EmotionData_eid_set(swigCPtr, this, value.swigValue());
    }
  
    public PXCEmotion.Emotion getEid() {
      return PXCEmotion.Emotion.swigToEnum(realsenseJNI.PXCEmotion_EmotionData_eid_get(swigCPtr, this));
    }
  
    public void setIntensity(float value) {
      realsenseJNI.PXCEmotion_EmotionData_intensity_set(swigCPtr, this, value);
    }
  
    public float getIntensity() {
      return realsenseJNI.PXCEmotion_EmotionData_intensity_get(swigCPtr, this);
    }
  
    public void setEvidence(int value) {
      realsenseJNI.PXCEmotion_EmotionData_evidence_set(swigCPtr, this, value);
    }
  
    public int getEvidence() {
      return realsenseJNI.PXCEmotion_EmotionData_evidence_get(swigCPtr, this);
    }
  
    public void setRectangle(PXCRectI32 value) {
      realsenseJNI.PXCEmotion_EmotionData_rectangle_set(swigCPtr, this, PXCRectI32.getCPtr(value), value);
    }
  
    public PXCRectI32 getRectangle() {
      long cPtr = realsenseJNI.PXCEmotion_EmotionData_rectangle_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCRectI32(cPtr, false);
    }
  
    public void setReserved(SWIGTYPE_p_int value) {
      realsenseJNI.PXCEmotion_EmotionData_reserved_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
    }
  
    public SWIGTYPE_p_int getReserved() {
      long cPtr = realsenseJNI.PXCEmotion_EmotionData_reserved_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
    }
  
    public EmotionData() {
      this(realsenseJNI.new_PXCEmotion_EmotionData(), true);
    }
  
  }

  public int QueryNumFaces() {
    return realsenseJNI.PXCEmotion_QueryNumFaces(swigCPtr, this);
  }

  public int QueryEmotionSize() {
    return realsenseJNI.PXCEmotion_QueryEmotionSize(swigCPtr, this);
  }

  public pxcStatus QueryEmotionData(int arg0, PXCEmotion.Emotion arg1, PXCEmotion.EmotionData arg2) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCEmotion_QueryEmotionData(swigCPtr, this, arg0, arg1.swigValue(), PXCEmotion.EmotionData.getCPtr(arg2), arg2));
  }

  public pxcStatus QueryAllEmotionData(int arg0, PXCEmotion.EmotionData arg1) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCEmotion_QueryAllEmotionData(swigCPtr, this, arg0, PXCEmotion.EmotionData.getCPtr(arg1), arg1));
  }

  public final static class Emotion {
    public final static PXCEmotion.Emotion EMOTION_PRIMARY_ANGER = new PXCEmotion.Emotion("EMOTION_PRIMARY_ANGER", realsenseJNI.PXCEmotion_EMOTION_PRIMARY_ANGER_get());
    public final static PXCEmotion.Emotion EMOTION_PRIMARY_CONTEMPT = new PXCEmotion.Emotion("EMOTION_PRIMARY_CONTEMPT", realsenseJNI.PXCEmotion_EMOTION_PRIMARY_CONTEMPT_get());
    public final static PXCEmotion.Emotion EMOTION_PRIMARY_DISGUST = new PXCEmotion.Emotion("EMOTION_PRIMARY_DISGUST", realsenseJNI.PXCEmotion_EMOTION_PRIMARY_DISGUST_get());
    public final static PXCEmotion.Emotion EMOTION_PRIMARY_FEAR = new PXCEmotion.Emotion("EMOTION_PRIMARY_FEAR", realsenseJNI.PXCEmotion_EMOTION_PRIMARY_FEAR_get());
    public final static PXCEmotion.Emotion EMOTION_PRIMARY_JOY = new PXCEmotion.Emotion("EMOTION_PRIMARY_JOY", realsenseJNI.PXCEmotion_EMOTION_PRIMARY_JOY_get());
    public final static PXCEmotion.Emotion EMOTION_PRIMARY_SADNESS = new PXCEmotion.Emotion("EMOTION_PRIMARY_SADNESS", realsenseJNI.PXCEmotion_EMOTION_PRIMARY_SADNESS_get());
    public final static PXCEmotion.Emotion EMOTION_PRIMARY_SURPRISE = new PXCEmotion.Emotion("EMOTION_PRIMARY_SURPRISE", realsenseJNI.PXCEmotion_EMOTION_PRIMARY_SURPRISE_get());
    public final static PXCEmotion.Emotion EMOTION_SENTIMENT_POSITIVE = new PXCEmotion.Emotion("EMOTION_SENTIMENT_POSITIVE", realsenseJNI.PXCEmotion_EMOTION_SENTIMENT_POSITIVE_get());
    public final static PXCEmotion.Emotion EMOTION_SENTIMENT_NEGATIVE = new PXCEmotion.Emotion("EMOTION_SENTIMENT_NEGATIVE", realsenseJNI.PXCEmotion_EMOTION_SENTIMENT_NEGATIVE_get());
    public final static PXCEmotion.Emotion EMOTION_SENTIMENT_NEUTRAL = new PXCEmotion.Emotion("EMOTION_SENTIMENT_NEUTRAL", realsenseJNI.PXCEmotion_EMOTION_SENTIMENT_NEUTRAL_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Emotion swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Emotion.class + " with value " + swigValue);
    }

    private Emotion(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Emotion(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Emotion(String swigName, Emotion swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Emotion[] swigValues = { EMOTION_PRIMARY_ANGER, EMOTION_PRIMARY_CONTEMPT, EMOTION_PRIMARY_DISGUST, EMOTION_PRIMARY_FEAR, EMOTION_PRIMARY_JOY, EMOTION_PRIMARY_SADNESS, EMOTION_PRIMARY_SURPRISE, EMOTION_SENTIMENT_POSITIVE, EMOTION_SENTIMENT_NEGATIVE, EMOTION_SENTIMENT_NEUTRAL };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
