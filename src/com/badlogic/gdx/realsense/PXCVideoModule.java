/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.realsense;

public class PXCVideoModule extends PXCBase {
  private long swigCPtr;

  protected PXCVideoModule(long cPtr, boolean cMemoryOwn) {
    super(realsenseJNI.PXCVideoModule_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PXCVideoModule obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  static public class DeviceCap {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected DeviceCap(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(DeviceCap obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCVideoModule_DeviceCap(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setLabel(PXCCapture.Property value) {
      realsenseJNI.PXCVideoModule_DeviceCap_label_set(swigCPtr, this, value.swigValue());
    }
  
    public PXCCapture.Property getLabel() {
      return PXCCapture.Property.swigToEnum(realsenseJNI.PXCVideoModule_DeviceCap_label_get(swigCPtr, this));
    }
  
    public void setValue(float value) {
      realsenseJNI.PXCVideoModule_DeviceCap_value_set(swigCPtr, this, value);
    }
  
    public float getValue() {
      return realsenseJNI.PXCVideoModule_DeviceCap_value_get(swigCPtr, this);
    }
  
    public DeviceCap() {
      this(realsenseJNI.new_PXCVideoModule_DeviceCap(), true);
    }
  
  }

  static public class StreamDesc {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected StreamDesc(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(StreamDesc obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCVideoModule_StreamDesc(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setSizeMin(PXCSizeI32 value) {
      realsenseJNI.PXCVideoModule_StreamDesc_sizeMin_set(swigCPtr, this, PXCSizeI32.getCPtr(value), value);
    }
  
    public PXCSizeI32 getSizeMin() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDesc_sizeMin_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCSizeI32(cPtr, false);
    }
  
    public void setSizeMax(PXCSizeI32 value) {
      realsenseJNI.PXCVideoModule_StreamDesc_sizeMax_set(swigCPtr, this, PXCSizeI32.getCPtr(value), value);
    }
  
    public PXCSizeI32 getSizeMax() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDesc_sizeMax_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCSizeI32(cPtr, false);
    }
  
    public void setFrameRate(PXCRangeF32 value) {
      realsenseJNI.PXCVideoModule_StreamDesc_frameRate_set(swigCPtr, this, PXCRangeF32.getCPtr(value), value);
    }
  
    public PXCRangeF32 getFrameRate() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDesc_frameRate_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCRangeF32(cPtr, false);
    }
  
    public void setReserved(SWIGTYPE_p_int value) {
      realsenseJNI.PXCVideoModule_StreamDesc_reserved_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
    }
  
    public SWIGTYPE_p_int getReserved() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDesc_reserved_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
    }
  
    public StreamDesc() {
      this(realsenseJNI.new_PXCVideoModule_StreamDesc(), true);
    }
  
  }

  static public class StreamDescSet {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected StreamDescSet(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(StreamDescSet obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCVideoModule_StreamDescSet(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setColor(PXCVideoModule.StreamDesc value) {
      realsenseJNI.PXCVideoModule_StreamDescSet_color_set(swigCPtr, this, PXCVideoModule.StreamDesc.getCPtr(value), value);
    }
  
    public PXCVideoModule.StreamDesc getColor() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDescSet_color_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCVideoModule.StreamDesc(cPtr, false);
    }
  
    public void setDepth(PXCVideoModule.StreamDesc value) {
      realsenseJNI.PXCVideoModule_StreamDescSet_depth_set(swigCPtr, this, PXCVideoModule.StreamDesc.getCPtr(value), value);
    }
  
    public PXCVideoModule.StreamDesc getDepth() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDescSet_depth_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCVideoModule.StreamDesc(cPtr, false);
    }
  
    public void setIr(PXCVideoModule.StreamDesc value) {
      realsenseJNI.PXCVideoModule_StreamDescSet_ir_set(swigCPtr, this, PXCVideoModule.StreamDesc.getCPtr(value), value);
    }
  
    public PXCVideoModule.StreamDesc getIr() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDescSet_ir_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCVideoModule.StreamDesc(cPtr, false);
    }
  
    public void setLeft(PXCVideoModule.StreamDesc value) {
      realsenseJNI.PXCVideoModule_StreamDescSet_left_set(swigCPtr, this, PXCVideoModule.StreamDesc.getCPtr(value), value);
    }
  
    public PXCVideoModule.StreamDesc getLeft() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDescSet_left_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCVideoModule.StreamDesc(cPtr, false);
    }
  
    public void setRight(PXCVideoModule.StreamDesc value) {
      realsenseJNI.PXCVideoModule_StreamDescSet_right_set(swigCPtr, this, PXCVideoModule.StreamDesc.getCPtr(value), value);
    }
  
    public PXCVideoModule.StreamDesc getRight() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDescSet_right_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCVideoModule.StreamDesc(cPtr, false);
    }
  
    public void setReserved(PXCVideoModule.StreamDesc value) {
      realsenseJNI.PXCVideoModule_StreamDescSet_reserved_set(swigCPtr, this, PXCVideoModule.StreamDesc.getCPtr(value), value);
    }
  
    public PXCVideoModule.StreamDesc getReserved() {
      long cPtr = realsenseJNI.PXCVideoModule_StreamDescSet_reserved_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCVideoModule.StreamDesc(cPtr, false);
    }
  
    public StreamDescSet() {
      this(realsenseJNI.new_PXCVideoModule_StreamDescSet(), true);
    }
  
  }

  static public class DataDesc {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected DataDesc(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(DataDesc obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCVideoModule_DataDesc(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setStreams(PXCVideoModule.StreamDescSet value) {
      realsenseJNI.PXCVideoModule_DataDesc_streams_set(swigCPtr, this, PXCVideoModule.StreamDescSet.getCPtr(value), value);
    }
  
    public PXCVideoModule.StreamDescSet getStreams() {
      long cPtr = realsenseJNI.PXCVideoModule_DataDesc_streams_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCVideoModule.StreamDescSet(cPtr, false);
    }
  
    public void setDevCaps(PXCVideoModule.DeviceCap value) {
      realsenseJNI.PXCVideoModule_DataDesc_devCaps_set(swigCPtr, this, PXCVideoModule.DeviceCap.getCPtr(value), value);
    }
  
    public PXCVideoModule.DeviceCap getDevCaps() {
      long cPtr = realsenseJNI.PXCVideoModule_DataDesc_devCaps_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCVideoModule.DeviceCap(cPtr, false);
    }
  
    public void setDeviceInfo(PXCCapture.DeviceInfo value) {
      realsenseJNI.PXCVideoModule_DataDesc_deviceInfo_set(swigCPtr, this, PXCCapture.DeviceInfo.getCPtr(value), value);
    }
  
    public PXCCapture.DeviceInfo getDeviceInfo() {
      long cPtr = realsenseJNI.PXCVideoModule_DataDesc_deviceInfo_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCCapture.DeviceInfo(cPtr, false);
    }
  
    public void setReserved(SWIGTYPE_p_int value) {
      realsenseJNI.PXCVideoModule_DataDesc_reserved_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
    }
  
    public SWIGTYPE_p_int getReserved() {
      long cPtr = realsenseJNI.PXCVideoModule_DataDesc_reserved_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
    }
  
    public DataDesc() {
      this(realsenseJNI.new_PXCVideoModule_DataDesc(), true);
    }
  
  }

  public pxcStatus QueryCaptureProfile(int pidx, PXCVideoModule.DataDesc inputs) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCVideoModule_QueryCaptureProfile__SWIG_0(swigCPtr, this, pidx, PXCVideoModule.DataDesc.getCPtr(inputs), inputs));
  }

  public pxcStatus QueryCaptureProfile(PXCVideoModule.DataDesc inputs) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCVideoModule_QueryCaptureProfile__SWIG_1(swigCPtr, this, PXCVideoModule.DataDesc.getCPtr(inputs), inputs));
  }

  public pxcStatus SetCaptureProfile(PXCVideoModule.DataDesc inputs) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCVideoModule_SetCaptureProfile(swigCPtr, this, PXCVideoModule.DataDesc.getCPtr(inputs), inputs));
  }

  public pxcStatus ProcessImageAsync(PXCCapture.Sample sample, SWIGTYPE_p_p_PXCSyncPoint sp) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCVideoModule_ProcessImageAsync(swigCPtr, this, PXCCapture.Sample.getCPtr(sample), sample, SWIGTYPE_p_p_PXCSyncPoint.getCPtr(sp)));
  }

  public final static int DEVCAP_LIMIT = realsenseJNI.PXCVideoModule_DEVCAP_LIMIT_get();

}
