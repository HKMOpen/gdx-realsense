/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.realsense;

public class realsenseJNI {
  public final static native void PXCRectI32_x_set(long jarg1, PXCRectI32 jarg1_, int jarg2);
  public final static native int PXCRectI32_x_get(long jarg1, PXCRectI32 jarg1_);
  public final static native void PXCRectI32_y_set(long jarg1, PXCRectI32 jarg1_, int jarg2);
  public final static native int PXCRectI32_y_get(long jarg1, PXCRectI32 jarg1_);
  public final static native void PXCRectI32_w_set(long jarg1, PXCRectI32 jarg1_, int jarg2);
  public final static native int PXCRectI32_w_get(long jarg1, PXCRectI32 jarg1_);
  public final static native void PXCRectI32_h_set(long jarg1, PXCRectI32 jarg1_, int jarg2);
  public final static native int PXCRectI32_h_get(long jarg1, PXCRectI32 jarg1_);
  public final static native long new_PXCRectI32();
  public final static native void delete_PXCRectI32(long jarg1);
  public final static native void PXCSizeI32_width_set(long jarg1, PXCSizeI32 jarg1_, int jarg2);
  public final static native int PXCSizeI32_width_get(long jarg1, PXCSizeI32 jarg1_);
  public final static native void PXCSizeI32_height_set(long jarg1, PXCSizeI32 jarg1_, int jarg2);
  public final static native int PXCSizeI32_height_get(long jarg1, PXCSizeI32 jarg1_);
  public final static native long new_PXCSizeI32();
  public final static native void delete_PXCSizeI32(long jarg1);
  public final static native void PXCPointF32_x_set(long jarg1, PXCPointF32 jarg1_, float jarg2);
  public final static native float PXCPointF32_x_get(long jarg1, PXCPointF32 jarg1_);
  public final static native void PXCPointF32_y_set(long jarg1, PXCPointF32 jarg1_, float jarg2);
  public final static native float PXCPointF32_y_get(long jarg1, PXCPointF32 jarg1_);
  public final static native long new_PXCPointF32();
  public final static native void delete_PXCPointF32(long jarg1);
  public final static native void PXCPointI32_x_set(long jarg1, PXCPointI32 jarg1_, int jarg2);
  public final static native int PXCPointI32_x_get(long jarg1, PXCPointI32 jarg1_);
  public final static native void PXCPointI32_y_set(long jarg1, PXCPointI32 jarg1_, int jarg2);
  public final static native int PXCPointI32_y_get(long jarg1, PXCPointI32 jarg1_);
  public final static native long new_PXCPointI32();
  public final static native void delete_PXCPointI32(long jarg1);
  public final static native void PXCRangeF32_min_set(long jarg1, PXCRangeF32 jarg1_, float jarg2);
  public final static native float PXCRangeF32_min_get(long jarg1, PXCRangeF32 jarg1_);
  public final static native void PXCRangeF32_max_set(long jarg1, PXCRangeF32 jarg1_, float jarg2);
  public final static native float PXCRangeF32_max_get(long jarg1, PXCRangeF32 jarg1_);
  public final static native long new_PXCRangeF32();
  public final static native void delete_PXCRangeF32(long jarg1);
  public final static native void PXCPoint3DF32_x_set(long jarg1, PXCPoint3DF32 jarg1_, float jarg2);
  public final static native float PXCPoint3DF32_x_get(long jarg1, PXCPoint3DF32 jarg1_);
  public final static native void PXCPoint3DF32_y_set(long jarg1, PXCPoint3DF32 jarg1_, float jarg2);
  public final static native float PXCPoint3DF32_y_get(long jarg1, PXCPoint3DF32 jarg1_);
  public final static native void PXCPoint3DF32_z_set(long jarg1, PXCPoint3DF32 jarg1_, float jarg2);
  public final static native float PXCPoint3DF32_z_get(long jarg1, PXCPoint3DF32 jarg1_);
  public final static native long new_PXCPoint3DF32();
  public final static native void delete_PXCPoint3DF32(long jarg1);
  public final static native void PXCPoint4DF32_x_set(long jarg1, PXCPoint4DF32 jarg1_, float jarg2);
  public final static native float PXCPoint4DF32_x_get(long jarg1, PXCPoint4DF32 jarg1_);
  public final static native void PXCPoint4DF32_y_set(long jarg1, PXCPoint4DF32 jarg1_, float jarg2);
  public final static native float PXCPoint4DF32_y_get(long jarg1, PXCPoint4DF32 jarg1_);
  public final static native void PXCPoint4DF32_z_set(long jarg1, PXCPoint4DF32 jarg1_, float jarg2);
  public final static native float PXCPoint4DF32_z_get(long jarg1, PXCPoint4DF32 jarg1_);
  public final static native void PXCPoint4DF32_w_set(long jarg1, PXCPoint4DF32 jarg1_, float jarg2);
  public final static native float PXCPoint4DF32_w_get(long jarg1, PXCPoint4DF32 jarg1_);
  public final static native long new_PXCPoint4DF32();
  public final static native void delete_PXCPoint4DF32(long jarg1);
  public final static native int PXCBase_CUID_get();
  public final static native int PXCBase_WORKING_PROFILE_get();
  public final static native long PXCBase_QueryInstance(long jarg1, PXCBase jarg1_, int jarg2);
  public final static native void PXCBase_Release(long jarg1, PXCBase jarg1_);
  public final static native int PXC3DScan_QueryMode(long jarg1, PXC3DScan jarg1_);
  public final static native int PXC3DScan_SetMode(long jarg1, PXC3DScan jarg1_, int jarg2);
  public final static native long PXC3DScan_AcquirePreviewImage(long jarg1, PXC3DScan jarg1_);
  public final static native int PXC3DScan_Reconstruct(long jarg1, PXC3DScan jarg1_, int jarg2, long jarg3);
  public final static native long PXC3DScan_FileFormatToString(int jarg1);
  public final static native long PXC3DSeg_AcquireSegmentedImage(long jarg1, PXC3DSeg jarg1_);
  public final static native int PXCAddRef_AddRef(long jarg1, PXCAddRef jarg1_);
  public final static native int PXCAudio_AUDIO_FORMAT_PCM_get();
  public final static native int PXCAudio_AUDIO_FORMAT_IEEE_FLOAT_get();
  public final static native long PXCAudio_AudioFormatToString(int jarg1);
  public final static native int PXCAudio_AudioFormatToSize(int jarg1);
  public final static native int PXCAudio_CHANNEL_MASK_FRONT_LEFT_get();
  public final static native int PXCAudio_CHANNEL_MASK_FRONT_RIGHT_get();
  public final static native int PXCAudio_CHANNEL_MASK_FRONT_CENTER_get();
  public final static native int PXCAudio_CHANNEL_MASK_LOW_FREQUENCY_get();
  public final static native int PXCAudio_CHANNEL_MASK_BACK_LEFT_get();
  public final static native int PXCAudio_CHANNEL_MASK_BACK_RIGHT_get();
  public final static native int PXCAudio_CHANNEL_MASK_SIDE_LEFT_get();
  public final static native int PXCAudio_CHANNEL_MASK_SIDE_RIGHT_get();
  public final static native void PXCAudio_AudioInfo_bufferSize_set(long jarg1, PXCAudio.AudioInfo jarg1_, int jarg2);
  public final static native int PXCAudio_AudioInfo_bufferSize_get(long jarg1, PXCAudio.AudioInfo jarg1_);
  public final static native void PXCAudio_AudioInfo_format_set(long jarg1, PXCAudio.AudioInfo jarg1_, int jarg2);
  public final static native int PXCAudio_AudioInfo_format_get(long jarg1, PXCAudio.AudioInfo jarg1_);
  public final static native void PXCAudio_AudioInfo_sampleRate_set(long jarg1, PXCAudio.AudioInfo jarg1_, int jarg2);
  public final static native int PXCAudio_AudioInfo_sampleRate_get(long jarg1, PXCAudio.AudioInfo jarg1_);
  public final static native void PXCAudio_AudioInfo_nchannels_set(long jarg1, PXCAudio.AudioInfo jarg1_, int jarg2);
  public final static native int PXCAudio_AudioInfo_nchannels_get(long jarg1, PXCAudio.AudioInfo jarg1_);
  public final static native void PXCAudio_AudioInfo_channelMask_set(long jarg1, PXCAudio.AudioInfo jarg1_, int jarg2);
  public final static native int PXCAudio_AudioInfo_channelMask_get(long jarg1, PXCAudio.AudioInfo jarg1_);
  public final static native void PXCAudio_AudioInfo_reserved_set(long jarg1, PXCAudio.AudioInfo jarg1_, long jarg2);
  public final static native long PXCAudio_AudioInfo_reserved_get(long jarg1, PXCAudio.AudioInfo jarg1_);
  public final static native long new_PXCAudio_AudioInfo();
  public final static native void delete_PXCAudio_AudioInfo(long jarg1);
  public final static native void PXCAudio_AudioData_format_set(long jarg1, PXCAudio.AudioData jarg1_, int jarg2);
  public final static native int PXCAudio_AudioData_format_get(long jarg1, PXCAudio.AudioData jarg1_);
  public final static native void PXCAudio_AudioData_dataSize_set(long jarg1, PXCAudio.AudioData jarg1_, int jarg2);
  public final static native int PXCAudio_AudioData_dataSize_get(long jarg1, PXCAudio.AudioData jarg1_);
  public final static native void PXCAudio_AudioData_dataPtr_set(long jarg1, PXCAudio.AudioData jarg1_, long jarg2);
  public final static native long PXCAudio_AudioData_dataPtr_get(long jarg1, PXCAudio.AudioData jarg1_);
  public final static native long new_PXCAudio_AudioData();
  public final static native void delete_PXCAudio_AudioData(long jarg1);
  public final static native int PXCAudio_ACCESS_READ_get();
  public final static native int PXCAudio_ACCESS_WRITE_get();
  public final static native int PXCAudio_ACCESS_READ_WRITE_get();
  public final static native int PXCAudio_OPTION_ANY_get();
  public final static native long PXCAudio_QueryInfo(long jarg1, PXCAudio jarg1_);
  public final static native long PXCAudio_QueryTimeStamp(long jarg1, PXCAudio jarg1_);
  public final static native int PXCAudio_QueryOptions(long jarg1, PXCAudio jarg1_);
  public final static native void PXCAudio_SetTimeStamp(long jarg1, PXCAudio jarg1_, long jarg2);
  public final static native void PXCAudio_SetOptions(long jarg1, PXCAudio jarg1_, int jarg2);
  public final static native int PXCAudio_CopyAudio(long jarg1, PXCAudio jarg1_, long jarg2, PXCAudio jarg2_);
  public final static native int PXCAudio_AcquireAccess__SWIG_0(long jarg1, PXCAudio jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, PXCAudio.AudioData jarg5_);
  public final static native int PXCAudio_AcquireAccess__SWIG_1(long jarg1, PXCAudio jarg1_, int jarg2, int jarg3, long jarg4, PXCAudio.AudioData jarg4_);
  public final static native int PXCAudio_AcquireAccess__SWIG_2(long jarg1, PXCAudio jarg1_, int jarg2, long jarg3, PXCAudio.AudioData jarg3_);
  public final static native int PXCAudio_ReleaseAccess(long jarg1, PXCAudio jarg1_, long jarg2, PXCAudio.AudioData jarg2_);
  public final static native void PXCAudio_AddRef(long jarg1, PXCAudio jarg1_);
  public final static native void PXCAudioSource_DeviceInfo_name_set(long jarg1, PXCAudioSource.DeviceInfo jarg1_, long jarg2);
  public final static native long PXCAudioSource_DeviceInfo_name_get(long jarg1, PXCAudioSource.DeviceInfo jarg1_);
  public final static native void PXCAudioSource_DeviceInfo_did_set(long jarg1, PXCAudioSource.DeviceInfo jarg1_, long jarg2);
  public final static native long PXCAudioSource_DeviceInfo_did_get(long jarg1, PXCAudioSource.DeviceInfo jarg1_);
  public final static native void PXCAudioSource_DeviceInfo_reserved_set(long jarg1, PXCAudioSource.DeviceInfo jarg1_, long jarg2);
  public final static native long PXCAudioSource_DeviceInfo_reserved_get(long jarg1, PXCAudioSource.DeviceInfo jarg1_);
  public final static native long new_PXCAudioSource_DeviceInfo();
  public final static native void delete_PXCAudioSource_DeviceInfo(long jarg1);
  public final static native void PXCAudioSource_ScanDevices(long jarg1, PXCAudioSource jarg1_);
  public final static native int PXCAudioSource_QueryDeviceNum(long jarg1, PXCAudioSource jarg1_);
  public final static native int PXCAudioSource_QueryDeviceInfo__SWIG_0(long jarg1, PXCAudioSource jarg1_, int jarg2, long jarg3, PXCAudioSource.DeviceInfo jarg3_);
  public final static native int PXCAudioSource_QueryDeviceInfo__SWIG_1(long jarg1, PXCAudioSource jarg1_, long jarg2, PXCAudioSource.DeviceInfo jarg2_);
  public final static native int PXCAudioSource_SetDevice(long jarg1, PXCAudioSource jarg1_, long jarg2, PXCAudioSource.DeviceInfo jarg2_);
  public final static native float PXCAudioSource_QueryVolume(long jarg1, PXCAudioSource jarg1_);
  public final static native int PXCAudioSource_SetVolume(long jarg1, PXCAudioSource jarg1_, float jarg2);
  public final static native int PXCCapture_STREAM_LIMIT_get();
  public final static native int PXCCapture_STREAM_TYPE_ANY_get();
  public final static native int PXCCapture_STREAM_TYPE_COLOR_get();
  public final static native int PXCCapture_STREAM_TYPE_DEPTH_get();
  public final static native int PXCCapture_STREAM_TYPE_IR_get();
  public final static native int PXCCapture_STREAM_TYPE_LEFT_get();
  public final static native int PXCCapture_STREAM_TYPE_RIGHT_get();
  public final static native long PXCCapture_StreamTypeToString(int jarg1);
  public final static native int PXCCapture_StreamTypeFromIndex(int jarg1);
  public final static native int PXCCapture_StreamTypeToIndex(int jarg1);
  public final static native int PXCCapture_DEVICE_MODEL_GENERIC_get();
  public final static native int PXCCapture_DEVICE_MODEL_IVCAM_get();
  public final static native int PXCCapture_DEVICE_MODEL_DS4_get();
  public final static native int PXCCapture_DEVICE_ORIENTATION_ANY_get();
  public final static native int PXCCapture_DEVICE_ORIENTATION_USER_FACING_get();
  public final static native int PXCCapture_DEVICE_ORIENTATION_WORLD_FACING_get();
  public final static native void PXCCapture_DeviceInfo_name_set(long jarg1, PXCCapture.DeviceInfo jarg1_, long jarg2);
  public final static native long PXCCapture_DeviceInfo_name_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_serial_set(long jarg1, PXCCapture.DeviceInfo jarg1_, long jarg2);
  public final static native long PXCCapture_DeviceInfo_serial_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_did_set(long jarg1, PXCCapture.DeviceInfo jarg1_, long jarg2);
  public final static native long PXCCapture_DeviceInfo_did_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_firmware_set(long jarg1, PXCCapture.DeviceInfo jarg1_, long jarg2);
  public final static native long PXCCapture_DeviceInfo_firmware_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_location_set(long jarg1, PXCCapture.DeviceInfo jarg1_, long jarg2, PXCPointF32 jarg2_);
  public final static native long PXCCapture_DeviceInfo_location_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_model_set(long jarg1, PXCCapture.DeviceInfo jarg1_, int jarg2);
  public final static native int PXCCapture_DeviceInfo_model_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_orientation_set(long jarg1, PXCCapture.DeviceInfo jarg1_, int jarg2);
  public final static native int PXCCapture_DeviceInfo_orientation_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_streams_set(long jarg1, PXCCapture.DeviceInfo jarg1_, int jarg2);
  public final static native int PXCCapture_DeviceInfo_streams_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_didx_set(long jarg1, PXCCapture.DeviceInfo jarg1_, int jarg2);
  public final static native int PXCCapture_DeviceInfo_didx_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_duid_set(long jarg1, PXCCapture.DeviceInfo jarg1_, int jarg2);
  public final static native int PXCCapture_DeviceInfo_duid_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native void PXCCapture_DeviceInfo_reserved_set(long jarg1, PXCCapture.DeviceInfo jarg1_, long jarg2);
  public final static native long PXCCapture_DeviceInfo_reserved_get(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native int PXCCapture_DeviceInfo_QueryStreamNum(long jarg1, PXCCapture.DeviceInfo jarg1_);
  public final static native long new_PXCCapture_DeviceInfo();
  public final static native void delete_PXCCapture_DeviceInfo(long jarg1);
  public final static native int PXCCapture_QueryDeviceNum(long jarg1, PXCCapture jarg1_);
  public final static native int PXCCapture_QueryDeviceInfo(long jarg1, PXCCapture jarg1_, int jarg2, long jarg3, PXCCapture.DeviceInfo jarg3_);
  public final static native long PXCCapture_CreateDevice(long jarg1, PXCCapture jarg1_, int jarg2);
  public final static native void PXCCapture_Sample_color_set(long jarg1, PXCCapture.Sample jarg1_, long jarg2, PXCImage jarg2_);
  public final static native long PXCCapture_Sample_color_get(long jarg1, PXCCapture.Sample jarg1_);
  public final static native void PXCCapture_Sample_depth_set(long jarg1, PXCCapture.Sample jarg1_, long jarg2, PXCImage jarg2_);
  public final static native long PXCCapture_Sample_depth_get(long jarg1, PXCCapture.Sample jarg1_);
  public final static native void PXCCapture_Sample_ir_set(long jarg1, PXCCapture.Sample jarg1_, long jarg2, PXCImage jarg2_);
  public final static native long PXCCapture_Sample_ir_get(long jarg1, PXCCapture.Sample jarg1_);
  public final static native void PXCCapture_Sample_left_set(long jarg1, PXCCapture.Sample jarg1_, long jarg2, PXCImage jarg2_);
  public final static native long PXCCapture_Sample_left_get(long jarg1, PXCCapture.Sample jarg1_);
  public final static native void PXCCapture_Sample_right_set(long jarg1, PXCCapture.Sample jarg1_, long jarg2, PXCImage jarg2_);
  public final static native long PXCCapture_Sample_right_get(long jarg1, PXCCapture.Sample jarg1_);
  public final static native void PXCCapture_Sample_reserved_set(long jarg1, PXCCapture.Sample jarg1_, long jarg2);
  public final static native long PXCCapture_Sample_reserved_get(long jarg1, PXCCapture.Sample jarg1_);
  public final static native void PXCCapture_Sample_ReleaseImages(long jarg1, PXCCapture.Sample jarg1_);
  public final static native long new_PXCCapture_Sample();
  public final static native void delete_PXCCapture_Sample(long jarg1);
  public final static native int PXCCapture_POWER_LINE_FREQUENCY_DISABLED_get();
  public final static native int PXCCapture_POWER_LINE_FREQUENCY_50HZ_get();
  public final static native int PXCCapture_POWER_LINE_FREQUENCY_60HZ_get();
  public final static native int PXCCapture_MIRROR_MODE_DISABLED_get();
  public final static native int PXCCapture_MIRROR_MODE_HORIZONTAL_get();
  public final static native int PXCCapture_IVCAM_ACCURACY_FINEST_get();
  public final static native int PXCCapture_IVCAM_ACCURACY_MEDIAN_get();
  public final static native int PXCCapture_IVCAM_ACCURACY_COARSE_get();
  public final static native int PXCCapture_PROPERTY_COLOR_EXPOSURE_get();
  public final static native int PXCCapture_PROPERTY_COLOR_BRIGHTNESS_get();
  public final static native int PXCCapture_PROPERTY_COLOR_CONTRAST_get();
  public final static native int PXCCapture_PROPERTY_COLOR_SATURATION_get();
  public final static native int PXCCapture_PROPERTY_COLOR_HUE_get();
  public final static native int PXCCapture_PROPERTY_COLOR_GAMMA_get();
  public final static native int PXCCapture_PROPERTY_COLOR_WHITE_BALANCE_get();
  public final static native int PXCCapture_PROPERTY_COLOR_SHARPNESS_get();
  public final static native int PXCCapture_PROPERTY_COLOR_BACK_LIGHT_COMPENSATION_get();
  public final static native int PXCCapture_PROPERTY_COLOR_GAIN_get();
  public final static native int PXCCapture_PROPERTY_COLOR_POWER_LINE_FREQUENCY_get();
  public final static native int PXCCapture_PROPERTY_COLOR_FOCAL_LENGTH_MM_get();
  public final static native int PXCCapture_PROPERTY_COLOR_FIELD_OF_VIEW_get();
  public final static native int PXCCapture_PROPERTY_COLOR_FOCAL_LENGTH_get();
  public final static native int PXCCapture_PROPERTY_COLOR_PRINCIPAL_POINT_get();
  public final static native int PXCCapture_PROPERTY_DEPTH_LOW_CONFIDENCE_VALUE_get();
  public final static native int PXCCapture_PROPERTY_DEPTH_CONFIDENCE_THRESHOLD_get();
  public final static native int PXCCapture_PROPERTY_DEPTH_UNIT_get();
  public final static native int PXCCapture_PROPERTY_DEPTH_FOCAL_LENGTH_MM_get();
  public final static native int PXCCapture_PROPERTY_DEPTH_FIELD_OF_VIEW_get();
  public final static native int PXCCapture_PROPERTY_DEPTH_SENSOR_RANGE_get();
  public final static native int PXCCapture_PROPERTY_DEPTH_FOCAL_LENGTH_get();
  public final static native int PXCCapture_PROPERTY_DEPTH_PRINCIPAL_POINT_get();
  public final static native int PXCCapture_PROPERTY_DEVICE_ALLOW_PROFILE_CHANGE_get();
  public final static native int PXCCapture_PROPERTY_DEVICE_MIRROR_get();
  public final static native int PXCCapture_PROPERTY_PROJECTION_SERIALIZABLE_get();
  public final static native int PXCCapture_PROPERTY_IVCAM_LASER_POWER_get();
  public final static native int PXCCapture_PROPERTY_IVCAM_ACCURACY_get();
  public final static native int PXCCapture_PROPERTY_IVCAM_FILTER_OPTION_get();
  public final static native int PXCCapture_PROPERTY_IVCAM_MOTION_RANGE_TRADE_OFF_get();
  public final static native int PXCCapture_PROPERTY_CUSTOMIZED_get();
  public final static native void PXCCapture_Device_QueryDeviceInfo(long jarg1, PXCCapture.Device jarg1_, long jarg2, PXCCapture.DeviceInfo jarg2_);
  public final static native long PXCCapture_Device_CreateProjection(long jarg1, PXCCapture.Device jarg1_);
  public final static native void PXCCapture_Device_StreamProfile_imageInfo_set(long jarg1, PXCCapture.Device.StreamProfile jarg1_, long jarg2, PXCImage.ImageInfo jarg2_);
  public final static native long PXCCapture_Device_StreamProfile_imageInfo_get(long jarg1, PXCCapture.Device.StreamProfile jarg1_);
  public final static native void PXCCapture_Device_StreamProfile_frameRate_set(long jarg1, PXCCapture.Device.StreamProfile jarg1_, long jarg2, PXCRangeF32 jarg2_);
  public final static native long PXCCapture_Device_StreamProfile_frameRate_get(long jarg1, PXCCapture.Device.StreamProfile jarg1_);
  public final static native void PXCCapture_Device_StreamProfile_reserved_set(long jarg1, PXCCapture.Device.StreamProfile jarg1_, long jarg2);
  public final static native long PXCCapture_Device_StreamProfile_reserved_get(long jarg1, PXCCapture.Device.StreamProfile jarg1_);
  public final static native long new_PXCCapture_Device_StreamProfile();
  public final static native void delete_PXCCapture_Device_StreamProfile(long jarg1);
  public final static native void PXCCapture_Device_StreamProfileSet_color_set(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_, long jarg2, PXCCapture.Device.StreamProfile jarg2_);
  public final static native long PXCCapture_Device_StreamProfileSet_color_get(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_);
  public final static native void PXCCapture_Device_StreamProfileSet_depth_set(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_, long jarg2, PXCCapture.Device.StreamProfile jarg2_);
  public final static native long PXCCapture_Device_StreamProfileSet_depth_get(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_);
  public final static native void PXCCapture_Device_StreamProfileSet_ir_set(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_, long jarg2, PXCCapture.Device.StreamProfile jarg2_);
  public final static native long PXCCapture_Device_StreamProfileSet_ir_get(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_);
  public final static native void PXCCapture_Device_StreamProfileSet_left_set(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_, long jarg2, PXCCapture.Device.StreamProfile jarg2_);
  public final static native long PXCCapture_Device_StreamProfileSet_left_get(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_);
  public final static native void PXCCapture_Device_StreamProfileSet_right_set(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_, long jarg2, PXCCapture.Device.StreamProfile jarg2_);
  public final static native long PXCCapture_Device_StreamProfileSet_right_get(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_);
  public final static native void PXCCapture_Device_StreamProfileSet_reserved_set(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_, long jarg2, PXCCapture.Device.StreamProfile jarg2_);
  public final static native long PXCCapture_Device_StreamProfileSet_reserved_get(long jarg1, PXCCapture.Device.StreamProfileSet jarg1_);
  public final static native long new_PXCCapture_Device_StreamProfileSet();
  public final static native void delete_PXCCapture_Device_StreamProfileSet(long jarg1);
  public final static native void PXCCapture_Device_PropertyInfo_range_set(long jarg1, PXCCapture.Device.PropertyInfo jarg1_, long jarg2, PXCRangeF32 jarg2_);
  public final static native long PXCCapture_Device_PropertyInfo_range_get(long jarg1, PXCCapture.Device.PropertyInfo jarg1_);
  public final static native void PXCCapture_Device_PropertyInfo_step_set(long jarg1, PXCCapture.Device.PropertyInfo jarg1_, float jarg2);
  public final static native float PXCCapture_Device_PropertyInfo_step_get(long jarg1, PXCCapture.Device.PropertyInfo jarg1_);
  public final static native void PXCCapture_Device_PropertyInfo_defaultValue_set(long jarg1, PXCCapture.Device.PropertyInfo jarg1_, float jarg2);
  public final static native float PXCCapture_Device_PropertyInfo_defaultValue_get(long jarg1, PXCCapture.Device.PropertyInfo jarg1_);
  public final static native void PXCCapture_Device_PropertyInfo_automatic_set(long jarg1, PXCCapture.Device.PropertyInfo jarg1_, int jarg2);
  public final static native int PXCCapture_Device_PropertyInfo_automatic_get(long jarg1, PXCCapture.Device.PropertyInfo jarg1_);
  public final static native void PXCCapture_Device_PropertyInfo_reserved_set(long jarg1, PXCCapture.Device.PropertyInfo jarg1_, long jarg2);
  public final static native long PXCCapture_Device_PropertyInfo_reserved_get(long jarg1, PXCCapture.Device.PropertyInfo jarg1_);
  public final static native long new_PXCCapture_Device_PropertyInfo();
  public final static native void delete_PXCCapture_Device_PropertyInfo(long jarg1);
  public final static native int PXCCapture_Device_QueryStreamProfileSetNum(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryStreamProfileSet__SWIG_0(long jarg1, PXCCapture.Device jarg1_, int jarg2, int jarg3, long jarg4, PXCCapture.Device.StreamProfileSet jarg4_);
  public final static native int PXCCapture_Device_QueryStreamProfileSet__SWIG_1(long jarg1, PXCCapture.Device jarg1_, long jarg2, PXCCapture.Device.StreamProfileSet jarg2_);
  public final static native int PXCCapture_Device_IsStreamProfileSetValid(long jarg1, PXCCapture.Device jarg1_, long jarg2, PXCCapture.Device.StreamProfileSet jarg2_);
  public final static native int PXCCapture_Device_SetStreamProfileSet(long jarg1, PXCCapture.Device jarg1_, long jarg2, PXCCapture.Device.StreamProfileSet jarg2_);
  public final static native int PXCCapture_Device_ReadStreamsAsync__SWIG_0(long jarg1, PXCCapture.Device jarg1_, int jarg2, long jarg3, PXCCapture.Sample jarg3_, long jarg4);
  public final static native int PXCCapture_Device_ReadStreamsAsync__SWIG_1(long jarg1, PXCCapture.Device jarg1_, long jarg2, PXCCapture.Sample jarg2_, long jarg3);
  public final static native int PXCCapture_Device_ReadStreams(long jarg1, PXCCapture.Device jarg1_, int jarg2, long jarg3, PXCCapture.Sample jarg3_);
  public final static native int PXCCapture_Device_QueryColorExposure(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorExposureInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorExposure(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_SetColorAutoExposure(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorBrightness(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorBrightnessInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorBrightness(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorContrast(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorContrastInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorContrast(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorSaturation(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorSaturationInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorSaturation(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorHue(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorHueInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorHue(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorGamma(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorGammaInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorGamma(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorWhiteBalance(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorWhiteBalanceInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorWhiteBalance(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_SetColorAutoWhiteBalance(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorSharpness(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorSharpnessInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorSharpness(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorBackLightCompensation(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorBackLightCompensationInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorBackLightCompensation(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorGain(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorGainInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorGain(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryColorPowerLineFrequency(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetColorPowerLineFrequency(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native long PXCCapture_Device_QueryColorFieldOfView(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorFocalLength(long jarg1, PXCCapture.Device jarg1_);
  public final static native float PXCCapture_Device_QueryColorFocalLengthMM(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryColorPrincipalPoint(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_QueryDepthLowConfidenceValue(long jarg1, PXCCapture.Device jarg1_);
  public final static native short PXCCapture_Device_QueryDepthConfidenceThreshold(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryDepthConfidenceThresholdInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetDepthConfidenceThreshold(long jarg1, PXCCapture.Device jarg1_, short jarg2);
  public final static native float PXCCapture_Device_QueryDepthUnit(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryDepthFieldOfView(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryDepthSensorRange(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryDepthFocalLength(long jarg1, PXCCapture.Device jarg1_);
  public final static native float PXCCapture_Device_QueryDepthFocalLengthMM(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryDepthPrincipalPoint(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_QueryDeviceAllowProfileChange(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetDeviceAllowProfileChange(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryMirrorMode(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetMirrorMode(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryIVCAMLaserPower(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryIVCAMLaserPowerInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetIVCAMLaserPower(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryIVCAMAccuracy(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetIVCAMAccuracy(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryIVCAMFilterOption(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryIVCAMFilterOptionInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetIVCAMFilterOption(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCapture_Device_QueryIVCAMMotionRangeTradeOff(long jarg1, PXCCapture.Device jarg1_);
  public final static native long PXCCapture_Device_QueryIVCAMMotionRangeTradeOffInfo(long jarg1, PXCCapture.Device jarg1_);
  public final static native int PXCCapture_Device_SetIVCAMMotionRangeTradeOff(long jarg1, PXCCapture.Device jarg1_, int jarg2);
  public final static native int PXCCaptureManager_Handler_OnCreateDevice(long jarg1, PXCCaptureManager.Handler jarg1_, long jarg2, PXCSession.ImplDesc jarg2_, long jarg3, PXCCapture.Device jarg3_);
  public final static native int PXCCaptureManager_Handler_OnSetupStreams(long jarg1, PXCCaptureManager.Handler jarg1_, long jarg2, PXCCapture.Device jarg2_, int jarg3);
  public final static native int PXCCaptureManager_Handler_OnNextDevice(long jarg1, PXCCaptureManager.Handler jarg1_, long jarg2, PXCCapture.Device jarg2_);
  public final static native long new_PXCCaptureManager_Handler();
  public final static native void delete_PXCCaptureManager_Handler(long jarg1);
  public final static native void PXCCaptureManager_FilterByDeviceInfo__SWIG_0(long jarg1, PXCCaptureManager jarg1_, long jarg2, PXCCapture.DeviceInfo jarg2_);
  public final static native void PXCCaptureManager_FilterByDeviceInfo__SWIG_1(long jarg1, PXCCaptureManager jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void PXCCaptureManager_FilterByStreamProfiles__SWIG_0(long jarg1, PXCCaptureManager jarg1_, long jarg2, PXCCapture.Device.StreamProfileSet jarg2_);
  public final static native void PXCCaptureManager_FilterByStreamProfiles__SWIG_1(long jarg1, PXCCaptureManager jarg1_, int jarg2, int jarg3, int jarg4, float jarg5);
  public final static native int PXCCaptureManager_RequestStreams(long jarg1, PXCCaptureManager jarg1_, int jarg2, long jarg3, PXCVideoModule.DataDesc jarg3_);
  public final static native int PXCCaptureManager_LocateStreams__SWIG_0(long jarg1, PXCCaptureManager jarg1_, long jarg2, PXCCaptureManager.Handler jarg2_);
  public final static native int PXCCaptureManager_LocateStreams__SWIG_1(long jarg1, PXCCaptureManager jarg1_);
  public final static native void PXCCaptureManager_CloseStreams(long jarg1, PXCCaptureManager jarg1_);
  public final static native long PXCCaptureManager_QueryCapture(long jarg1, PXCCaptureManager jarg1_);
  public final static native long PXCCaptureManager_QueryDevice(long jarg1, PXCCaptureManager jarg1_);
  public final static native long PXCCaptureManager_QueryImageSize(long jarg1, PXCCaptureManager jarg1_, int jarg2);
  public final static native int PXCCaptureManager_ReadModuleStreamsAsync(long jarg1, PXCCaptureManager jarg1_, int jarg2, long jarg3, PXCCapture.Sample jarg3_, long jarg4);
  public final static native int PXCCaptureManager_SetFileName(long jarg1, PXCCaptureManager jarg1_, long jarg2, int jarg3);
  public final static native void PXCCaptureManager_SetMask(long jarg1, PXCCaptureManager jarg1_, int jarg2);
  public final static native void PXCCaptureManager_SetPause(long jarg1, PXCCaptureManager jarg1_, int jarg2);
  public final static native void PXCCaptureManager_SetRealtime(long jarg1, PXCCaptureManager jarg1_, int jarg2);
  public final static native void PXCCaptureManager_SetFrameByIndex(long jarg1, PXCCaptureManager jarg1_, int jarg2);
  public final static native int PXCCaptureManager_QueryFrameIndex(long jarg1, PXCCaptureManager jarg1_);
  public final static native void PXCCaptureManager_SetFrameByTimeStamp(long jarg1, PXCCaptureManager jarg1_, long jarg2);
  public final static native long PXCCaptureManager_QueryFrameTimeStamp(long jarg1, PXCCaptureManager jarg1_);
  public final static native int PXCCaptureManager_QueryNumberOfFrames(long jarg1, PXCCaptureManager jarg1_);
  public final static native int PXCEmotion_EMOTION_PRIMARY_ANGER_get();
  public final static native int PXCEmotion_EMOTION_PRIMARY_CONTEMPT_get();
  public final static native int PXCEmotion_EMOTION_PRIMARY_DISGUST_get();
  public final static native int PXCEmotion_EMOTION_PRIMARY_FEAR_get();
  public final static native int PXCEmotion_EMOTION_PRIMARY_JOY_get();
  public final static native int PXCEmotion_EMOTION_PRIMARY_SADNESS_get();
  public final static native int PXCEmotion_EMOTION_PRIMARY_SURPRISE_get();
  public final static native int PXCEmotion_EMOTION_SENTIMENT_POSITIVE_get();
  public final static native int PXCEmotion_EMOTION_SENTIMENT_NEGATIVE_get();
  public final static native int PXCEmotion_EMOTION_SENTIMENT_NEUTRAL_get();
  public final static native void PXCEmotion_EmotionData_timeStamp_set(long jarg1, PXCEmotion.EmotionData jarg1_, long jarg2);
  public final static native long PXCEmotion_EmotionData_timeStamp_get(long jarg1, PXCEmotion.EmotionData jarg1_);
  public final static native void PXCEmotion_EmotionData_emotion_set(long jarg1, PXCEmotion.EmotionData jarg1_, int jarg2);
  public final static native int PXCEmotion_EmotionData_emotion_get(long jarg1, PXCEmotion.EmotionData jarg1_);
  public final static native void PXCEmotion_EmotionData_fid_set(long jarg1, PXCEmotion.EmotionData jarg1_, int jarg2);
  public final static native int PXCEmotion_EmotionData_fid_get(long jarg1, PXCEmotion.EmotionData jarg1_);
  public final static native void PXCEmotion_EmotionData_eid_set(long jarg1, PXCEmotion.EmotionData jarg1_, int jarg2);
  public final static native int PXCEmotion_EmotionData_eid_get(long jarg1, PXCEmotion.EmotionData jarg1_);
  public final static native void PXCEmotion_EmotionData_intensity_set(long jarg1, PXCEmotion.EmotionData jarg1_, float jarg2);
  public final static native float PXCEmotion_EmotionData_intensity_get(long jarg1, PXCEmotion.EmotionData jarg1_);
  public final static native void PXCEmotion_EmotionData_evidence_set(long jarg1, PXCEmotion.EmotionData jarg1_, int jarg2);
  public final static native int PXCEmotion_EmotionData_evidence_get(long jarg1, PXCEmotion.EmotionData jarg1_);
  public final static native void PXCEmotion_EmotionData_rectangle_set(long jarg1, PXCEmotion.EmotionData jarg1_, long jarg2, PXCRectI32 jarg2_);
  public final static native long PXCEmotion_EmotionData_rectangle_get(long jarg1, PXCEmotion.EmotionData jarg1_);
  public final static native void PXCEmotion_EmotionData_reserved_set(long jarg1, PXCEmotion.EmotionData jarg1_, long jarg2);
  public final static native long PXCEmotion_EmotionData_reserved_get(long jarg1, PXCEmotion.EmotionData jarg1_);
  public final static native long new_PXCEmotion_EmotionData();
  public final static native void delete_PXCEmotion_EmotionData(long jarg1);
  public final static native int PXCEmotion_QueryNumFaces(long jarg1, PXCEmotion jarg1_);
  public final static native int PXCEmotion_QueryEmotionSize(long jarg1, PXCEmotion jarg1_);
  public final static native int PXCEmotion_QueryEmotionData(long jarg1, PXCEmotion jarg1_, int jarg2, int jarg3, long jarg4, PXCEmotion.EmotionData jarg4_);
  public final static native int PXCEmotion_QueryAllEmotionData(long jarg1, PXCEmotion jarg1_, int jarg2, long jarg3, PXCEmotion.EmotionData jarg3_);
  public final static native void PXCFaceConfiguration_DetectionConfiguration_isEnabled_set(long jarg1, PXCFaceConfiguration.DetectionConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_DetectionConfiguration_isEnabled_get(long jarg1, PXCFaceConfiguration.DetectionConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_DetectionConfiguration_maxTrackedFaces_set(long jarg1, PXCFaceConfiguration.DetectionConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_DetectionConfiguration_maxTrackedFaces_get(long jarg1, PXCFaceConfiguration.DetectionConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_DetectionConfiguration_smoothingLevel_set(long jarg1, PXCFaceConfiguration.DetectionConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_DetectionConfiguration_smoothingLevel_get(long jarg1, PXCFaceConfiguration.DetectionConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_DetectionConfiguration_reserved_set(long jarg1, PXCFaceConfiguration.DetectionConfiguration jarg1_, long jarg2);
  public final static native long PXCFaceConfiguration_DetectionConfiguration_reserved_get(long jarg1, PXCFaceConfiguration.DetectionConfiguration jarg1_);
  public final static native long new_PXCFaceConfiguration_DetectionConfiguration();
  public final static native void delete_PXCFaceConfiguration_DetectionConfiguration(long jarg1);
  public final static native void PXCFaceConfiguration_LandmarksConfiguration_isEnabled_set(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_LandmarksConfiguration_isEnabled_get(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_LandmarksConfiguration_maxTrackedFaces_set(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_LandmarksConfiguration_maxTrackedFaces_get(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_LandmarksConfiguration_smoothingLevel_set(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_LandmarksConfiguration_smoothingLevel_get(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_LandmarksConfiguration_numLandmarks_set(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_LandmarksConfiguration_numLandmarks_get(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_LandmarksConfiguration_reserved_set(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_, long jarg2);
  public final static native long PXCFaceConfiguration_LandmarksConfiguration_reserved_get(long jarg1, PXCFaceConfiguration.LandmarksConfiguration jarg1_);
  public final static native long new_PXCFaceConfiguration_LandmarksConfiguration();
  public final static native void delete_PXCFaceConfiguration_LandmarksConfiguration(long jarg1);
  public final static native void PXCFaceConfiguration_PoseConfiguration_isEnabled_set(long jarg1, PXCFaceConfiguration.PoseConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_PoseConfiguration_isEnabled_get(long jarg1, PXCFaceConfiguration.PoseConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_PoseConfiguration_maxTrackedFaces_set(long jarg1, PXCFaceConfiguration.PoseConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_PoseConfiguration_maxTrackedFaces_get(long jarg1, PXCFaceConfiguration.PoseConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_PoseConfiguration_smoothingLevel_set(long jarg1, PXCFaceConfiguration.PoseConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_PoseConfiguration_smoothingLevel_get(long jarg1, PXCFaceConfiguration.PoseConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_PoseConfiguration_reserved_set(long jarg1, PXCFaceConfiguration.PoseConfiguration jarg1_, long jarg2);
  public final static native long PXCFaceConfiguration_PoseConfiguration_reserved_get(long jarg1, PXCFaceConfiguration.PoseConfiguration jarg1_);
  public final static native long new_PXCFaceConfiguration_PoseConfiguration();
  public final static native void delete_PXCFaceConfiguration_PoseConfiguration(long jarg1);
  public final static native void PXCFaceConfiguration_ExpressionsConfiguration_ExpressionsProperties_isEnabled_set(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration.ExpressionsProperties jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_ExpressionsConfiguration_ExpressionsProperties_isEnabled_get(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration.ExpressionsProperties jarg1_);
  public final static native void PXCFaceConfiguration_ExpressionsConfiguration_ExpressionsProperties_maxTrackedFaces_set(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration.ExpressionsProperties jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_ExpressionsConfiguration_ExpressionsProperties_maxTrackedFaces_get(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration.ExpressionsProperties jarg1_);
  public final static native void PXCFaceConfiguration_ExpressionsConfiguration_ExpressionsProperties_reserved_set(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration.ExpressionsProperties jarg1_, long jarg2);
  public final static native long PXCFaceConfiguration_ExpressionsConfiguration_ExpressionsProperties_reserved_get(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration.ExpressionsProperties jarg1_);
  public final static native long new_PXCFaceConfiguration_ExpressionsConfiguration_ExpressionsProperties();
  public final static native void delete_PXCFaceConfiguration_ExpressionsConfiguration_ExpressionsProperties(long jarg1);
  public final static native void PXCFaceConfiguration_ExpressionsConfiguration_properties_set(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_, long jarg2, PXCFaceConfiguration.ExpressionsConfiguration.ExpressionsProperties jarg2_);
  public final static native long PXCFaceConfiguration_ExpressionsConfiguration_properties_get(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_ExpressionsConfiguration_Enable(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_ExpressionsConfiguration_Disable(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_);
  public final static native int PXCFaceConfiguration_ExpressionsConfiguration_IsEnabled(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_ExpressionsConfiguration_EnableAllExpressions(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_ExpressionsConfiguration_DisableAllExpressions(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_);
  public final static native int PXCFaceConfiguration_ExpressionsConfiguration_EnableExpression(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_, int jarg2);
  public final static native void PXCFaceConfiguration_ExpressionsConfiguration_DisableExpression(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_ExpressionsConfiguration_IsExpressionEnabled(long jarg1, PXCFaceConfiguration.ExpressionsConfiguration jarg1_, int jarg2);
  public final static native void delete_PXCFaceConfiguration_ExpressionsConfiguration(long jarg1);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_RecognitionStorageDesc_isPersistent_set(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_RecognitionStorageDesc_isPersistent_get(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_RecognitionStorageDesc_maxUsers_set(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_RecognitionStorageDesc_maxUsers_get(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_RecognitionStorageDesc_reserved_set(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg1_, long jarg2);
  public final static native long PXCFaceConfiguration_RecognitionConfiguration_RecognitionStorageDesc_reserved_get(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg1_);
  public final static native long new_PXCFaceConfiguration_RecognitionConfiguration_RecognitionStorageDesc();
  public final static native void delete_PXCFaceConfiguration_RecognitionConfiguration_RecognitionStorageDesc(long jarg1);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_storageDesc_set(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, long jarg2, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg2_);
  public final static native long PXCFaceConfiguration_RecognitionConfiguration_storageDesc_get(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties_isEnabled_set(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionProperties jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties_isEnabled_get(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionProperties jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties_accuracyThreshold_set(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionProperties jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties_accuracyThreshold_get(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionProperties jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties_registrationMode_set(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionProperties jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties_registrationMode_get(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionProperties jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties_reserved_set(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionProperties jarg1_, long jarg2);
  public final static native long PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties_reserved_get(long jarg1, PXCFaceConfiguration.RecognitionConfiguration.RecognitionProperties jarg1_);
  public final static native long new_PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties();
  public final static native void delete_PXCFaceConfiguration_RecognitionConfiguration_RecognitionProperties(long jarg1);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_properties_set(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, long jarg2, PXCFaceConfiguration.RecognitionConfiguration.RecognitionProperties jarg2_);
  public final static native long PXCFaceConfiguration_RecognitionConfiguration_properties_get(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_Enable(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_Disable(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_SetAccuracyThreshold(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_GetAccuracryThreshold(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_SetRegistrationMode(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_GetRegistrationMode(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_UseStorage(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, long jarg2);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_QueryActiveStorage(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, long jarg2, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg2_);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_CreateStorage(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, long jarg2, long jarg3, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg3_);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_SetStorageDesc(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, long jarg2, long jarg3, PXCFaceConfiguration.RecognitionConfiguration.RecognitionStorageDesc jarg3_);
  public final static native int PXCFaceConfiguration_RecognitionConfiguration_DeleteStorage(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, long jarg2);
  public final static native void PXCFaceConfiguration_RecognitionConfiguration_SetDatabaseBuffer(long jarg1, PXCFaceConfiguration.RecognitionConfiguration jarg1_, long jarg2, int jarg3);
  public final static native void PXCFaceConfiguration_detection_set(long jarg1, PXCFaceConfiguration jarg1_, long jarg2, PXCFaceConfiguration.DetectionConfiguration jarg2_);
  public final static native long PXCFaceConfiguration_detection_get(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_landmarks_set(long jarg1, PXCFaceConfiguration jarg1_, long jarg2, PXCFaceConfiguration.LandmarksConfiguration jarg2_);
  public final static native long PXCFaceConfiguration_landmarks_get(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_pose_set(long jarg1, PXCFaceConfiguration jarg1_, long jarg2, PXCFaceConfiguration.PoseConfiguration jarg2_);
  public final static native long PXCFaceConfiguration_pose_get(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native long PXCFaceConfiguration_QueryExpressions(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_strategy_set(long jarg1, PXCFaceConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_strategy_get(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native long PXCFaceConfiguration_QueryRecognition(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native int PXCFaceConfiguration_SetTrackingMode(long jarg1, PXCFaceConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_GetTrackingMode(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_AlertHandler_OnFiredAlert(long jarg1, PXCFaceConfiguration.AlertHandler jarg1_, long jarg2, PXCFaceData.AlertData jarg2_);
  public final static native void delete_PXCFaceConfiguration_AlertHandler(long jarg1);
  public final static native int PXCFaceConfiguration_EnableAlert(long jarg1, PXCFaceConfiguration jarg1_, int jarg2);
  public final static native void PXCFaceConfiguration_EnableAllAlerts(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native int PXCFaceConfiguration_IsAlertEnabled(long jarg1, PXCFaceConfiguration jarg1_, int jarg2);
  public final static native int PXCFaceConfiguration_DisableAlert(long jarg1, PXCFaceConfiguration jarg1_, int jarg2);
  public final static native void PXCFaceConfiguration_DisableAllAlerts(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native int PXCFaceConfiguration_SubscribeAlert(long jarg1, PXCFaceConfiguration jarg1_, long jarg2, PXCFaceConfiguration.AlertHandler jarg2_);
  public final static native int PXCFaceConfiguration_UnsubscribeAlert(long jarg1, PXCFaceConfiguration jarg1_, long jarg2, PXCFaceConfiguration.AlertHandler jarg2_);
  public final static native int PXCFaceConfiguration_ApplyChanges(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native void PXCFaceConfiguration_RestoreDefaults(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native int PXCFaceConfiguration_Update(long jarg1, PXCFaceConfiguration jarg1_);
  public final static native int PXCFaceData_LANDMARK_NOT_NAMED_get();
  public final static native int PXCFaceData_LANDMARK_GROUP_LEFT_EYE_get();
  public final static native int PXCFaceData_LANDMARK_GROUP_RIGHT_EYE_get();
  public final static native int PXCFaceData_LANDMARK_GROUP_RIGHT_EYEBROW_get();
  public final static native int PXCFaceData_LANDMARK_GROUP_LEFT_EYEBROW_get();
  public final static native int PXCFaceData_LANDMARK_GROUP_NOSE_get();
  public final static native int PXCFaceData_LANDMARK_GROUP_MOUTH_get();
  public final static native int PXCFaceData_LANDMARK_GROUP_JAW_get();
  public final static native void PXCFaceData_LandmarkPointSource_index_set(long jarg1, PXCFaceData.LandmarkPointSource jarg1_, int jarg2);
  public final static native int PXCFaceData_LandmarkPointSource_index_get(long jarg1, PXCFaceData.LandmarkPointSource jarg1_);
  public final static native void PXCFaceData_LandmarkPointSource_alias_set(long jarg1, PXCFaceData.LandmarkPointSource jarg1_, int jarg2);
  public final static native int PXCFaceData_LandmarkPointSource_alias_get(long jarg1, PXCFaceData.LandmarkPointSource jarg1_);
  public final static native void PXCFaceData_LandmarkPointSource_reserved_set(long jarg1, PXCFaceData.LandmarkPointSource jarg1_, long jarg2);
  public final static native long PXCFaceData_LandmarkPointSource_reserved_get(long jarg1, PXCFaceData.LandmarkPointSource jarg1_);
  public final static native long new_PXCFaceData_LandmarkPointSource();
  public final static native void delete_PXCFaceData_LandmarkPointSource(long jarg1);
  public final static native void PXCFaceData_LandmarkPoint_source_set(long jarg1, PXCFaceData.LandmarkPoint jarg1_, long jarg2, PXCFaceData.LandmarkPointSource jarg2_);
  public final static native long PXCFaceData_LandmarkPoint_source_get(long jarg1, PXCFaceData.LandmarkPoint jarg1_);
  public final static native void PXCFaceData_LandmarkPoint_confidenceImage_set(long jarg1, PXCFaceData.LandmarkPoint jarg1_, int jarg2);
  public final static native int PXCFaceData_LandmarkPoint_confidenceImage_get(long jarg1, PXCFaceData.LandmarkPoint jarg1_);
  public final static native void PXCFaceData_LandmarkPoint_confidenceWorld_set(long jarg1, PXCFaceData.LandmarkPoint jarg1_, int jarg2);
  public final static native int PXCFaceData_LandmarkPoint_confidenceWorld_get(long jarg1, PXCFaceData.LandmarkPoint jarg1_);
  public final static native void PXCFaceData_LandmarkPoint_world_set(long jarg1, PXCFaceData.LandmarkPoint jarg1_, long jarg2, PXCPoint3DF32 jarg2_);
  public final static native long PXCFaceData_LandmarkPoint_world_get(long jarg1, PXCFaceData.LandmarkPoint jarg1_);
  public final static native void PXCFaceData_LandmarkPoint_image_set(long jarg1, PXCFaceData.LandmarkPoint jarg1_, long jarg2, PXCPointF32 jarg2_);
  public final static native long PXCFaceData_LandmarkPoint_image_get(long jarg1, PXCFaceData.LandmarkPoint jarg1_);
  public final static native void PXCFaceData_LandmarkPoint_reserved_set(long jarg1, PXCFaceData.LandmarkPoint jarg1_, long jarg2);
  public final static native long PXCFaceData_LandmarkPoint_reserved_get(long jarg1, PXCFaceData.LandmarkPoint jarg1_);
  public final static native long new_PXCFaceData_LandmarkPoint();
  public final static native void delete_PXCFaceData_LandmarkPoint(long jarg1);
  public final static native void PXCFaceData_HeadPosition_headCenter_set(long jarg1, PXCFaceData.HeadPosition jarg1_, long jarg2, PXCPoint3DF32 jarg2_);
  public final static native long PXCFaceData_HeadPosition_headCenter_get(long jarg1, PXCFaceData.HeadPosition jarg1_);
  public final static native void PXCFaceData_HeadPosition_reserved_set(long jarg1, PXCFaceData.HeadPosition jarg1_, long jarg2);
  public final static native long PXCFaceData_HeadPosition_reserved_get(long jarg1, PXCFaceData.HeadPosition jarg1_);
  public final static native long new_PXCFaceData_HeadPosition();
  public final static native void delete_PXCFaceData_HeadPosition(long jarg1);
  public final static native void PXCFaceData_PoseEulerAngles_yaw_set(long jarg1, PXCFaceData.PoseEulerAngles jarg1_, float jarg2);
  public final static native float PXCFaceData_PoseEulerAngles_yaw_get(long jarg1, PXCFaceData.PoseEulerAngles jarg1_);
  public final static native void PXCFaceData_PoseEulerAngles_pitch_set(long jarg1, PXCFaceData.PoseEulerAngles jarg1_, float jarg2);
  public final static native float PXCFaceData_PoseEulerAngles_pitch_get(long jarg1, PXCFaceData.PoseEulerAngles jarg1_);
  public final static native void PXCFaceData_PoseEulerAngles_roll_set(long jarg1, PXCFaceData.PoseEulerAngles jarg1_, float jarg2);
  public final static native float PXCFaceData_PoseEulerAngles_roll_get(long jarg1, PXCFaceData.PoseEulerAngles jarg1_);
  public final static native void PXCFaceData_PoseEulerAngles_reserved_set(long jarg1, PXCFaceData.PoseEulerAngles jarg1_, long jarg2);
  public final static native long PXCFaceData_PoseEulerAngles_reserved_get(long jarg1, PXCFaceData.PoseEulerAngles jarg1_);
  public final static native long new_PXCFaceData_PoseEulerAngles();
  public final static native void delete_PXCFaceData_PoseEulerAngles(long jarg1);
  public final static native void PXCFaceData_PoseQuaternion_x_set(long jarg1, PXCFaceData.PoseQuaternion jarg1_, float jarg2);
  public final static native float PXCFaceData_PoseQuaternion_x_get(long jarg1, PXCFaceData.PoseQuaternion jarg1_);
  public final static native void PXCFaceData_PoseQuaternion_y_set(long jarg1, PXCFaceData.PoseQuaternion jarg1_, float jarg2);
  public final static native float PXCFaceData_PoseQuaternion_y_get(long jarg1, PXCFaceData.PoseQuaternion jarg1_);
  public final static native void PXCFaceData_PoseQuaternion_z_set(long jarg1, PXCFaceData.PoseQuaternion jarg1_, float jarg2);
  public final static native float PXCFaceData_PoseQuaternion_z_get(long jarg1, PXCFaceData.PoseQuaternion jarg1_);
  public final static native void PXCFaceData_PoseQuaternion_w_set(long jarg1, PXCFaceData.PoseQuaternion jarg1_, float jarg2);
  public final static native float PXCFaceData_PoseQuaternion_w_get(long jarg1, PXCFaceData.PoseQuaternion jarg1_);
  public final static native void PXCFaceData_PoseQuaternion_reserved_set(long jarg1, PXCFaceData.PoseQuaternion jarg1_, long jarg2);
  public final static native long PXCFaceData_PoseQuaternion_reserved_get(long jarg1, PXCFaceData.PoseQuaternion jarg1_);
  public final static native long new_PXCFaceData_PoseQuaternion();
  public final static native void delete_PXCFaceData_PoseQuaternion(long jarg1);
  public final static native int PXCFaceData_DetectionData_QueryFaceAverageDepth(long jarg1, PXCFaceData.DetectionData jarg1_, long jarg2);
  public final static native int PXCFaceData_DetectionData_QueryBoundingRect(long jarg1, PXCFaceData.DetectionData jarg1_, long jarg2, PXCRectI32 jarg2_);
  public final static native int PXCFaceData_LandmarksData_QueryNumPoints(long jarg1, PXCFaceData.LandmarksData jarg1_);
  public final static native int PXCFaceData_LandmarksData_QueryPoints(long jarg1, PXCFaceData.LandmarksData jarg1_, long jarg2, PXCFaceData.LandmarkPoint jarg2_);
  public final static native int PXCFaceData_LandmarksData_QueryPoint(long jarg1, PXCFaceData.LandmarksData jarg1_, int jarg2, long jarg3, PXCFaceData.LandmarkPoint jarg3_);
  public final static native int PXCFaceData_LandmarksData_QueryNumPointsByGroup(long jarg1, PXCFaceData.LandmarksData jarg1_, int jarg2);
  public final static native int PXCFaceData_LandmarksData_QueryPointsByGroup(long jarg1, PXCFaceData.LandmarksData jarg1_, int jarg2, long jarg3, PXCFaceData.LandmarkPoint jarg3_);
  public final static native int PXCFaceData_LandmarksData_QueryPointIndex(long jarg1, PXCFaceData.LandmarksData jarg1_, int jarg2);
  public final static native int PXCFaceData_PoseData_QueryPoseAngles(long jarg1, PXCFaceData.PoseData jarg1_, long jarg2, PXCFaceData.PoseEulerAngles jarg2_);
  public final static native int PXCFaceData_PoseData_QueryPoseQuaternion(long jarg1, PXCFaceData.PoseData jarg1_, long jarg2, PXCFaceData.PoseQuaternion jarg2_);
  public final static native int PXCFaceData_PoseData_QueryHeadPosition(long jarg1, PXCFaceData.PoseData jarg1_, long jarg2, PXCFaceData.HeadPosition jarg2_);
  public final static native int PXCFaceData_PoseData_QueryRotationMatrix(long jarg1, PXCFaceData.PoseData jarg1_, long jarg2);
  public final static native void PXCFaceData_ExpressionsData_FaceExpressionResult_intensity_set(long jarg1, PXCFaceData.ExpressionsData.FaceExpressionResult jarg1_, int jarg2);
  public final static native int PXCFaceData_ExpressionsData_FaceExpressionResult_intensity_get(long jarg1, PXCFaceData.ExpressionsData.FaceExpressionResult jarg1_);
  public final static native void PXCFaceData_ExpressionsData_FaceExpressionResult_reserved_set(long jarg1, PXCFaceData.ExpressionsData.FaceExpressionResult jarg1_, long jarg2);
  public final static native long PXCFaceData_ExpressionsData_FaceExpressionResult_reserved_get(long jarg1, PXCFaceData.ExpressionsData.FaceExpressionResult jarg1_);
  public final static native long new_PXCFaceData_ExpressionsData_FaceExpressionResult();
  public final static native void delete_PXCFaceData_ExpressionsData_FaceExpressionResult(long jarg1);
  public final static native int PXCFaceData_ExpressionsData_QueryExpression(long jarg1, PXCFaceData.ExpressionsData jarg1_, int jarg2, long jarg3, PXCFaceData.ExpressionsData.FaceExpressionResult jarg3_);
  public final static native int PXCFaceData_RecognitionData_RegisterUser(long jarg1, PXCFaceData.RecognitionData jarg1_);
  public final static native void PXCFaceData_RecognitionData_UnregisterUser(long jarg1, PXCFaceData.RecognitionData jarg1_);
  public final static native int PXCFaceData_RecognitionData_IsRegistered(long jarg1, PXCFaceData.RecognitionData jarg1_);
  public final static native int PXCFaceData_RecognitionData_QueryUserID(long jarg1, PXCFaceData.RecognitionData jarg1_);
  public final static native int PXCFaceData_RecognitionModuleData_QueryDatabaseSize(long jarg1, PXCFaceData.RecognitionModuleData jarg1_);
  public final static native int PXCFaceData_RecognitionModuleData_QueryDatabaseBuffer(long jarg1, PXCFaceData.RecognitionModuleData jarg1_, long jarg2);
  public final static native int PXCFaceData_Face_QueryUserID(long jarg1, PXCFaceData.Face jarg1_);
  public final static native long PXCFaceData_Face_QueryDetection(long jarg1, PXCFaceData.Face jarg1_);
  public final static native long PXCFaceData_Face_QueryLandmarks(long jarg1, PXCFaceData.Face jarg1_);
  public final static native long PXCFaceData_Face_QueryPose(long jarg1, PXCFaceData.Face jarg1_);
  public final static native long PXCFaceData_Face_QueryExpressions(long jarg1, PXCFaceData.Face jarg1_);
  public final static native long PXCFaceData_Face_QueryRecognition(long jarg1, PXCFaceData.Face jarg1_);
  public final static native int PXCFaceData_Update(long jarg1, PXCFaceData jarg1_);
  public final static native long PXCFaceData_QueryFrameTimestamp(long jarg1, PXCFaceData jarg1_);
  public final static native int PXCFaceData_QueryNumberOfDetectedFaces(long jarg1, PXCFaceData jarg1_);
  public final static native long PXCFaceData_QueryFaceByID(long jarg1, PXCFaceData jarg1_, int jarg2);
  public final static native long PXCFaceData_QueryFaceByIndex(long jarg1, PXCFaceData jarg1_, int jarg2);
  public final static native long PXCFaceData_QueryFaces(long jarg1, PXCFaceData jarg1_, long jarg2);
  public final static native long PXCFaceData_QueryRecognitionModule(long jarg1, PXCFaceData jarg1_);
  public final static native void PXCFaceData_AlertData_label_set(long jarg1, PXCFaceData.AlertData jarg1_, int jarg2);
  public final static native int PXCFaceData_AlertData_label_get(long jarg1, PXCFaceData.AlertData jarg1_);
  public final static native void PXCFaceData_AlertData_timeStamp_set(long jarg1, PXCFaceData.AlertData jarg1_, long jarg2);
  public final static native long PXCFaceData_AlertData_timeStamp_get(long jarg1, PXCFaceData.AlertData jarg1_);
  public final static native void PXCFaceData_AlertData_faceId_set(long jarg1, PXCFaceData.AlertData jarg1_, int jarg2);
  public final static native int PXCFaceData_AlertData_faceId_get(long jarg1, PXCFaceData.AlertData jarg1_);
  public final static native void PXCFaceData_AlertData_reserved_set(long jarg1, PXCFaceData.AlertData jarg1_, long jarg2);
  public final static native long PXCFaceData_AlertData_reserved_get(long jarg1, PXCFaceData.AlertData jarg1_);
  public final static native long new_PXCFaceData_AlertData();
  public final static native void delete_PXCFaceData_AlertData(long jarg1);
  public final static native int PXCFaceData_ALERT_NAME_SIZE_get();
  public final static native int PXCFaceData_QueryFiredAlertData(long jarg1, PXCFaceData jarg1_, int jarg2, long jarg3, PXCFaceData.AlertData jarg3_);
  public final static native int PXCFaceData_QueryAlertNameByID(long jarg1, PXCFaceData jarg1_, int jarg2, long jarg3);
  public final static native int PXCFaceData_QueryFiredAlertsNumber(long jarg1, PXCFaceData jarg1_);
  public final static native int PXCFaceData_IsAlertFired(long jarg1, PXCFaceData jarg1_, int jarg2, long jarg3, PXCFaceData.AlertData jarg3_);
  public final static native int PXCFaceData_IsAlertFiredByFace(long jarg1, PXCFaceData jarg1_, int jarg2, int jarg3, long jarg4, PXCFaceData.AlertData jarg4_);
  public final static native long PXCFaceModule_CreateActiveConfiguration(long jarg1, PXCFaceModule jarg1_);
  public final static native long PXCFaceModule_CreateOutput(long jarg1, PXCFaceModule jarg1_);
  public final static native void PXCHandConfiguration_AlertHandler_OnFiredAlert(long jarg1, PXCHandConfiguration.AlertHandler jarg1_, long jarg2, PXCHandData.AlertData jarg2_);
  public final static native void delete_PXCHandConfiguration_AlertHandler(long jarg1);
  public final static native void PXCHandConfiguration_GestureHandler_OnFiredGesture(long jarg1, PXCHandConfiguration.GestureHandler jarg1_, long jarg2, PXCHandData.GestureData jarg2_);
  public final static native void delete_PXCHandConfiguration_GestureHandler(long jarg1);
  public final static native int PXCHandConfiguration_ApplyChanges(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_RestoreDefaults(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_Update(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_ResetTracking(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_SetUserName(long jarg1, PXCHandConfiguration jarg1_, long jarg2);
  public final static native long PXCHandConfiguration_QueryUserName(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_EnableJointSpeed(long jarg1, PXCHandConfiguration jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int PXCHandConfiguration_DisableJointSpeed(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_SetTrackingBounds(long jarg1, PXCHandConfiguration jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native int PXCHandConfiguration_QueryTrackingBounds(long jarg1, PXCHandConfiguration jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int PXCHandConfiguration_SetTrackingMode(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_QueryTrackingMode(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_SetDistanceUnit(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_QueryDistanceUnit(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_SetSmoothingValue(long jarg1, PXCHandConfiguration jarg1_, float jarg2);
  public final static native float PXCHandConfiguration_QuerySmoothingValue(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_EnableNormalizedJoints(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_IsNormalizedJointsEnabled(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_EnableSegmentationImage(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_IsSegmentationImageEnabled(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_EnableTrackedJoints(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_IsTrackedJointsEnabled(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_EnableAlert(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_EnableAllAlerts(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_IsAlertEnabled(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_DisableAlert(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_DisableAllAlerts(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_SubscribeAlert(long jarg1, PXCHandConfiguration jarg1_, long jarg2, PXCHandConfiguration.AlertHandler jarg2_);
  public final static native int PXCHandConfiguration_UnsubscribeAlert(long jarg1, PXCHandConfiguration jarg1_, long jarg2, PXCHandConfiguration.AlertHandler jarg2_);
  public final static native int PXCHandConfiguration_LoadGesturePack(long jarg1, PXCHandConfiguration jarg1_, long jarg2);
  public final static native int PXCHandConfiguration_UnloadGesturePack(long jarg1, PXCHandConfiguration jarg1_, long jarg2);
  public final static native int PXCHandConfiguration_UnloadAllGesturesPacks(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_QueryGesturesTotalNumber(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_QueryGestureNameByIndex(long jarg1, PXCHandConfiguration jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int PXCHandConfiguration_EnableGesture__SWIG_0(long jarg1, PXCHandConfiguration jarg1_, long jarg2, int jarg3);
  public final static native int PXCHandConfiguration_EnableGesture__SWIG_1(long jarg1, PXCHandConfiguration jarg1_, long jarg2);
  public final static native int PXCHandConfiguration_EnableAllGestures__SWIG_0(long jarg1, PXCHandConfiguration jarg1_, int jarg2);
  public final static native int PXCHandConfiguration_EnableAllGestures__SWIG_1(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_IsGestureEnabled(long jarg1, PXCHandConfiguration jarg1_, long jarg2);
  public final static native int PXCHandConfiguration_DisableGesture(long jarg1, PXCHandConfiguration jarg1_, long jarg2);
  public final static native int PXCHandConfiguration_DisableAllGestures(long jarg1, PXCHandConfiguration jarg1_);
  public final static native int PXCHandConfiguration_SubscribeGesture(long jarg1, PXCHandConfiguration jarg1_, long jarg2, PXCHandConfiguration.GestureHandler jarg2_);
  public final static native int PXCHandConfiguration_UnsubscribeGesture(long jarg1, PXCHandConfiguration jarg1_, long jarg2, PXCHandConfiguration.GestureHandler jarg2_);
  public final static native int PXCHandData_NUMBER_OF_FINGERS_get();
  public final static native int PXCHandData_NUMBER_OF_EXTREMITIES_get();
  public final static native int PXCHandData_NUMBER_OF_JOINTS_get();
  public final static native int PXCHandData_RESERVED_NUMBER_OF_JOINTS_get();
  public final static native int PXCHandData_MAX_NAME_SIZE_get();
  public final static native int PXCHandData_MAX_PATH_NAME_get();
  public final static native int PXCHandData_JOINT_WRIST_get();
  public final static native int PXCHandData_EXTREMITY_CLOSEST_get();
  public final static native int PXCHandData_FINGER_THUMB_get();
  public final static native int PXCHandData_BODY_SIDE_UNKNOWN_get();
  public final static native int PXCHandData_ALERT_HAND_DETECTED_get();
  public final static native int PXCHandData_ALERT_HAND_NOT_DETECTED_get();
  public final static native int PXCHandData_ALERT_HAND_TRACKED_get();
  public final static native int PXCHandData_ALERT_HAND_NOT_TRACKED_get();
  public final static native int PXCHandData_ALERT_HAND_CALIBRATED_get();
  public final static native int PXCHandData_ALERT_HAND_NOT_CALIBRATED_get();
  public final static native int PXCHandData_ALERT_HAND_OUT_OF_BORDERS_get();
  public final static native int PXCHandData_ALERT_HAND_INSIDE_BORDERS_get();
  public final static native int PXCHandData_ALERT_HAND_OUT_OF_LEFT_BORDER_get();
  public final static native int PXCHandData_ALERT_HAND_OUT_OF_RIGHT_BORDER_get();
  public final static native int PXCHandData_ALERT_HAND_OUT_OF_TOP_BORDER_get();
  public final static native int PXCHandData_ALERT_HAND_OUT_OF_BOTTOM_BORDER_get();
  public final static native int PXCHandData_ALERT_HAND_TOO_FAR_get();
  public final static native int PXCHandData_ALERT_HAND_TOO_CLOSE_get();
  public final static native int PXCHandData_GESTURE_STATE_START_get();
  public final static native int PXCHandData_TRACKING_MODE_FULL_HAND_get();
  public final static native int PXCHandData_DISTANCE_UNIT_METERS_get();
  public final static native int PXCHandData_JOINT_SPEED_AVERAGE_get();
  public final static native int PXCHandData_ACCESS_ORDER_BY_ID_get();
  public final static native void PXCHandData_JointData_confidence_set(long jarg1, PXCHandData.JointData jarg1_, int jarg2);
  public final static native int PXCHandData_JointData_confidence_get(long jarg1, PXCHandData.JointData jarg1_);
  public final static native void PXCHandData_JointData_positionWorld_set(long jarg1, PXCHandData.JointData jarg1_, long jarg2, PXCPoint3DF32 jarg2_);
  public final static native long PXCHandData_JointData_positionWorld_get(long jarg1, PXCHandData.JointData jarg1_);
  public final static native void PXCHandData_JointData_positionImage_set(long jarg1, PXCHandData.JointData jarg1_, long jarg2, PXCPoint3DF32 jarg2_);
  public final static native long PXCHandData_JointData_positionImage_get(long jarg1, PXCHandData.JointData jarg1_);
  public final static native void PXCHandData_JointData_localRotation_set(long jarg1, PXCHandData.JointData jarg1_, long jarg2, PXCPoint4DF32 jarg2_);
  public final static native long PXCHandData_JointData_localRotation_get(long jarg1, PXCHandData.JointData jarg1_);
  public final static native void PXCHandData_JointData_globalOrientation_set(long jarg1, PXCHandData.JointData jarg1_, long jarg2, PXCPoint4DF32 jarg2_);
  public final static native long PXCHandData_JointData_globalOrientation_get(long jarg1, PXCHandData.JointData jarg1_);
  public final static native void PXCHandData_JointData_speed_set(long jarg1, PXCHandData.JointData jarg1_, long jarg2, PXCPoint3DF32 jarg2_);
  public final static native long PXCHandData_JointData_speed_get(long jarg1, PXCHandData.JointData jarg1_);
  public final static native long new_PXCHandData_JointData();
  public final static native void delete_PXCHandData_JointData(long jarg1);
  public final static native void PXCHandData_ExtremityData_pointWorld_set(long jarg1, PXCHandData.ExtremityData jarg1_, long jarg2, PXCPoint3DF32 jarg2_);
  public final static native long PXCHandData_ExtremityData_pointWorld_get(long jarg1, PXCHandData.ExtremityData jarg1_);
  public final static native void PXCHandData_ExtremityData_pointImage_set(long jarg1, PXCHandData.ExtremityData jarg1_, long jarg2, PXCPoint3DF32 jarg2_);
  public final static native long PXCHandData_ExtremityData_pointImage_get(long jarg1, PXCHandData.ExtremityData jarg1_);
  public final static native long new_PXCHandData_ExtremityData();
  public final static native void delete_PXCHandData_ExtremityData(long jarg1);
  public final static native void PXCHandData_FingerData_foldedness_set(long jarg1, PXCHandData.FingerData jarg1_, int jarg2);
  public final static native int PXCHandData_FingerData_foldedness_get(long jarg1, PXCHandData.FingerData jarg1_);
  public final static native void PXCHandData_FingerData_radius_set(long jarg1, PXCHandData.FingerData jarg1_, float jarg2);
  public final static native float PXCHandData_FingerData_radius_get(long jarg1, PXCHandData.FingerData jarg1_);
  public final static native long new_PXCHandData_FingerData();
  public final static native void delete_PXCHandData_FingerData(long jarg1);
  public final static native void PXCHandData_AlertData_label_set(long jarg1, PXCHandData.AlertData jarg1_, int jarg2);
  public final static native int PXCHandData_AlertData_label_get(long jarg1, PXCHandData.AlertData jarg1_);
  public final static native void PXCHandData_AlertData_handId_set(long jarg1, PXCHandData.AlertData jarg1_, int jarg2);
  public final static native int PXCHandData_AlertData_handId_get(long jarg1, PXCHandData.AlertData jarg1_);
  public final static native void PXCHandData_AlertData_timeStamp_set(long jarg1, PXCHandData.AlertData jarg1_, long jarg2);
  public final static native long PXCHandData_AlertData_timeStamp_get(long jarg1, PXCHandData.AlertData jarg1_);
  public final static native void PXCHandData_AlertData_frameNumber_set(long jarg1, PXCHandData.AlertData jarg1_, int jarg2);
  public final static native int PXCHandData_AlertData_frameNumber_get(long jarg1, PXCHandData.AlertData jarg1_);
  public final static native long new_PXCHandData_AlertData();
  public final static native void delete_PXCHandData_AlertData(long jarg1);
  public final static native void PXCHandData_GestureData_timeStamp_set(long jarg1, PXCHandData.GestureData jarg1_, long jarg2);
  public final static native long PXCHandData_GestureData_timeStamp_get(long jarg1, PXCHandData.GestureData jarg1_);
  public final static native void PXCHandData_GestureData_handId_set(long jarg1, PXCHandData.GestureData jarg1_, int jarg2);
  public final static native int PXCHandData_GestureData_handId_get(long jarg1, PXCHandData.GestureData jarg1_);
  public final static native void PXCHandData_GestureData_state_set(long jarg1, PXCHandData.GestureData jarg1_, int jarg2);
  public final static native int PXCHandData_GestureData_state_get(long jarg1, PXCHandData.GestureData jarg1_);
  public final static native void PXCHandData_GestureData_frameNumber_set(long jarg1, PXCHandData.GestureData jarg1_, int jarg2);
  public final static native int PXCHandData_GestureData_frameNumber_get(long jarg1, PXCHandData.GestureData jarg1_);
  public final static native void PXCHandData_GestureData_name_set(long jarg1, PXCHandData.GestureData jarg1_, long jarg2);
  public final static native long PXCHandData_GestureData_name_get(long jarg1, PXCHandData.GestureData jarg1_);
  public final static native long new_PXCHandData_GestureData();
  public final static native void delete_PXCHandData_GestureData(long jarg1);
  public final static native int PXCHandData_IHand_QueryUniqueId(long jarg1, PXCHandData.IHand jarg1_);
  public final static native int PXCHandData_IHand_QueryUserId(long jarg1, PXCHandData.IHand jarg1_);
  public final static native long PXCHandData_IHand_QueryTimeStamp(long jarg1, PXCHandData.IHand jarg1_);
  public final static native int PXCHandData_IHand_IsCalibrated(long jarg1, PXCHandData.IHand jarg1_);
  public final static native int PXCHandData_IHand_QueryBodySide(long jarg1, PXCHandData.IHand jarg1_);
  public final static native long PXCHandData_IHand_QueryBoundingBoxImage(long jarg1, PXCHandData.IHand jarg1_);
  public final static native long PXCHandData_IHand_QueryMassCenterImage(long jarg1, PXCHandData.IHand jarg1_);
  public final static native long PXCHandData_IHand_QueryMassCenterWorld(long jarg1, PXCHandData.IHand jarg1_);
  public final static native long PXCHandData_IHand_QueryPalmOrientation(long jarg1, PXCHandData.IHand jarg1_);
  public final static native int PXCHandData_IHand_QueryOpenness(long jarg1, PXCHandData.IHand jarg1_);
  public final static native int PXCHandData_IHand_QueryExtremityPoint(long jarg1, PXCHandData.IHand jarg1_, int jarg2, long jarg3, PXCHandData.ExtremityData jarg3_);
  public final static native int PXCHandData_IHand_QueryFingerData(long jarg1, PXCHandData.IHand jarg1_, int jarg2, long jarg3, PXCHandData.FingerData jarg3_);
  public final static native int PXCHandData_IHand_QueryTrackedJoint(long jarg1, PXCHandData.IHand jarg1_, int jarg2, long jarg3, PXCHandData.JointData jarg3_);
  public final static native int PXCHandData_IHand_QueryNormalizedJoint(long jarg1, PXCHandData.IHand jarg1_, int jarg2, long jarg3, PXCHandData.JointData jarg3_);
  public final static native int PXCHandData_IHand_QuerySegmentationImage(long jarg1, PXCHandData.IHand jarg1_, long jarg2);
  public final static native int PXCHandData_IHand_HasTrackedJoints(long jarg1, PXCHandData.IHand jarg1_);
  public final static native int PXCHandData_IHand_HasNormalizedJoints(long jarg1, PXCHandData.IHand jarg1_);
  public final static native int PXCHandData_IHand_HasSegmentationImage(long jarg1, PXCHandData.IHand jarg1_);
  public final static native void delete_PXCHandData_IHand(long jarg1);
  public final static native int PXCHandData_Update(long jarg1, PXCHandData jarg1_);
  public final static native int PXCHandData_QueryFiredAlertsNumber(long jarg1, PXCHandData jarg1_);
  public final static native int PXCHandData_QueryFiredAlertData(long jarg1, PXCHandData jarg1_, int jarg2, long jarg3, PXCHandData.AlertData jarg3_);
  public final static native int PXCHandData_IsAlertFired(long jarg1, PXCHandData jarg1_, int jarg2, long jarg3, PXCHandData.AlertData jarg3_);
  public final static native int PXCHandData_IsAlertFiredByHand(long jarg1, PXCHandData jarg1_, int jarg2, int jarg3, long jarg4, PXCHandData.AlertData jarg4_);
  public final static native int PXCHandData_QueryFiredGesturesNumber(long jarg1, PXCHandData jarg1_);
  public final static native int PXCHandData_QueryFiredGestureData(long jarg1, PXCHandData jarg1_, int jarg2, long jarg3, PXCHandData.GestureData jarg3_);
  public final static native int PXCHandData_IsGestureFired(long jarg1, PXCHandData jarg1_, long jarg2, long jarg3, PXCHandData.GestureData jarg3_);
  public final static native int PXCHandData_IsGestureFiredByHand(long jarg1, PXCHandData jarg1_, long jarg2, int jarg3, long jarg4, PXCHandData.GestureData jarg4_);
  public final static native int PXCHandData_QueryNumberOfHands(long jarg1, PXCHandData jarg1_);
  public final static native int PXCHandData_QueryHandId(long jarg1, PXCHandData jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int PXCHandData_QueryHandData(long jarg1, PXCHandData jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int PXCHandData_QueryHandDataById(long jarg1, PXCHandData jarg1_, int jarg2, long jarg3);
  public final static native long PXCHandModule_CreateActiveConfiguration(long jarg1, PXCHandModule jarg1_);
  public final static native long PXCHandModule_CreateOutput(long jarg1, PXCHandModule jarg1_);
  public final static native int PXCImage_NUM_OF_PLANES_get();
  public final static native int PXCImage_METADATA_DEVICE_PROPERTIES_get();
  public final static native int PXCImage_METADATA_DEVICE_PROJECTION_get();
  public final static native int PXCImage_PIXEL_FORMAT_ANY_get();
  public final static native int PXCImage_PIXEL_FORMAT_YUY2_get();
  public final static native int PXCImage_PIXEL_FORMAT_DEPTH_get();
  public final static native int PXCImage_PIXEL_FORMAT_Y16_get();
  public final static native int PXCImage_PIXEL_FORMAT_Y8_IR_RELATIVE_get();
  public final static native long PXCImage_PixelFormatToString(int jarg1);
  public final static native void PXCImage_ImageInfo_width_set(long jarg1, PXCImage.ImageInfo jarg1_, int jarg2);
  public final static native int PXCImage_ImageInfo_width_get(long jarg1, PXCImage.ImageInfo jarg1_);
  public final static native void PXCImage_ImageInfo_height_set(long jarg1, PXCImage.ImageInfo jarg1_, int jarg2);
  public final static native int PXCImage_ImageInfo_height_get(long jarg1, PXCImage.ImageInfo jarg1_);
  public final static native void PXCImage_ImageInfo_format_set(long jarg1, PXCImage.ImageInfo jarg1_, int jarg2);
  public final static native int PXCImage_ImageInfo_format_get(long jarg1, PXCImage.ImageInfo jarg1_);
  public final static native void PXCImage_ImageInfo_reserved_set(long jarg1, PXCImage.ImageInfo jarg1_, int jarg2);
  public final static native int PXCImage_ImageInfo_reserved_get(long jarg1, PXCImage.ImageInfo jarg1_);
  public final static native long new_PXCImage_ImageInfo();
  public final static native void delete_PXCImage_ImageInfo(long jarg1);
  public final static native void PXCImage_ImageData_format_set(long jarg1, PXCImage.ImageData jarg1_, int jarg2);
  public final static native int PXCImage_ImageData_format_get(long jarg1, PXCImage.ImageData jarg1_);
  public final static native void PXCImage_ImageData_reserved_set(long jarg1, PXCImage.ImageData jarg1_, long jarg2);
  public final static native long PXCImage_ImageData_reserved_get(long jarg1, PXCImage.ImageData jarg1_);
  public final static native void PXCImage_ImageData_pitches_set(long jarg1, PXCImage.ImageData jarg1_, long jarg2);
  public final static native long PXCImage_ImageData_pitches_get(long jarg1, PXCImage.ImageData jarg1_);
  public final static native void PXCImage_ImageData_planes_set(long jarg1, PXCImage.ImageData jarg1_, long jarg2);
  public final static native long PXCImage_ImageData_planes_get(long jarg1, PXCImage.ImageData jarg1_);
  public final static native int PXCImage_ImageData_getPlanePitch(long jarg1, PXCImage.ImageData jarg1_, int jarg2);
  public final static native void PXCImage_ImageData_getPlaneData(long jarg1, PXCImage.ImageData jarg1_, int jarg2, java.nio.ByteBuffer jarg3, int jarg4);
  public final static native long new_PXCImage_ImageData();
  public final static native void delete_PXCImage_ImageData(long jarg1);
  public final static native int PXCImage_ACCESS_READ_get();
  public final static native int PXCImage_ACCESS_WRITE_get();
  public final static native int PXCImage_ACCESS_READ_WRITE_get();
  public final static native int PXCImage_OPTION_ANY_get();
  public final static native long PXCImage_QueryInfo(long jarg1, PXCImage jarg1_);
  public final static native long PXCImage_QueryTimeStamp(long jarg1, PXCImage jarg1_);
  public final static native int PXCImage_QueryStreamType(long jarg1, PXCImage jarg1_);
  public final static native int PXCImage_QueryOptions(long jarg1, PXCImage jarg1_);
  public final static native void PXCImage_SetTimeStamp(long jarg1, PXCImage jarg1_, long jarg2);
  public final static native void PXCImage_SetStreamType(long jarg1, PXCImage jarg1_, int jarg2);
  public final static native void PXCImage_SetOptions(long jarg1, PXCImage jarg1_, int jarg2);
  public final static native int PXCImage_CopyImage(long jarg1, PXCImage jarg1_, long jarg2, PXCImage jarg2_);
  public final static native int PXCImage_ExportData__SWIG_0(long jarg1, PXCImage jarg1_, long jarg2, PXCImage.ImageData jarg2_, int jarg3);
  public final static native int PXCImage_ExportData__SWIG_1(long jarg1, PXCImage jarg1_, long jarg2, PXCImage.ImageData jarg2_);
  public final static native int PXCImage_ImportData__SWIG_0(long jarg1, PXCImage jarg1_, long jarg2, PXCImage.ImageData jarg2_, int jarg3);
  public final static native int PXCImage_ImportData__SWIG_1(long jarg1, PXCImage jarg1_, long jarg2, PXCImage.ImageData jarg2_);
  public final static native int PXCImage_AcquireAccess__SWIG_0(long jarg1, PXCImage jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, PXCImage.ImageData jarg5_);
  public final static native int PXCImage_AcquireAccess__SWIG_1(long jarg1, PXCImage jarg1_, int jarg2, int jarg3, long jarg4, PXCImage.ImageData jarg4_);
  public final static native int PXCImage_AcquireAccess__SWIG_2(long jarg1, PXCImage jarg1_, int jarg2, long jarg3, PXCImage.ImageData jarg3_);
  public final static native int PXCImage_ReleaseAccess(long jarg1, PXCImage jarg1_, long jarg2, PXCImage.ImageData jarg2_);
  public final static native void PXCImage_AddRef(long jarg1, PXCImage jarg1_);
  public final static native int PXCMetadata_QueryUID(long jarg1, PXCMetadata jarg1_);
  public final static native int PXCMetadata_QueryMetadata(long jarg1, PXCMetadata jarg1_, int jarg2);
  public final static native int PXCMetadata_DetachMetadata(long jarg1, PXCMetadata jarg1_, int jarg2);
  public final static native int PXCMetadata_AttachBuffer(long jarg1, PXCMetadata jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native int PXCMetadata_QueryBufferSize(long jarg1, PXCMetadata jarg1_, int jarg2);
  public final static native int PXCMetadata_QueryBuffer(long jarg1, PXCMetadata jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native int PXCMetadata_AttachSerializable(long jarg1, PXCMetadata jarg1_, int jarg2, long jarg3, PXCBase jarg3_);
  public final static native int PXCMetadata_CreateSerializable(long jarg1, PXCMetadata jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int PXCPowerState_QueryState(long jarg1, PXCPowerState jarg1_);
  public final static native int PXCPowerState_SetState(long jarg1, PXCPowerState jarg1_, int jarg2);
  public final static native int PXCProjection_MapDepthToColor(long jarg1, PXCProjection jarg1_, int jarg2, long jarg3, PXCPoint3DF32 jarg3_, long jarg4, PXCPointF32 jarg4_);
  public final static native int PXCProjection_MapColorToDepth(long jarg1, PXCProjection jarg1_, long jarg2, PXCImage jarg2_, int jarg3, long jarg4, PXCPointF32 jarg4_, long jarg5, PXCPointF32 jarg5_);
  public final static native int PXCProjection_ProjectDepthToCamera(long jarg1, PXCProjection jarg1_, int jarg2, long jarg3, PXCPoint3DF32 jarg3_, long jarg4, PXCPoint3DF32 jarg4_);
  public final static native int PXCProjection_ProjectColorToCamera(long jarg1, PXCProjection jarg1_, int jarg2, long jarg3, PXCPoint3DF32 jarg3_, long jarg4, PXCPoint3DF32 jarg4_);
  public final static native int PXCProjection_ProjectCameraToDepth(long jarg1, PXCProjection jarg1_, int jarg2, long jarg3, PXCPoint3DF32 jarg3_, long jarg4, PXCPointF32 jarg4_);
  public final static native int PXCProjection_ProjectCameraToColor(long jarg1, PXCProjection jarg1_, int jarg2, long jarg3, PXCPoint3DF32 jarg3_, long jarg4, PXCPointF32 jarg4_);
  public final static native int PXCProjection_QueryUVMap(long jarg1, PXCProjection jarg1_, long jarg2, PXCImage jarg2_, long jarg3, PXCPointF32 jarg3_);
  public final static native int PXCProjection_QueryInvUVMap(long jarg1, PXCProjection jarg1_, long jarg2, PXCImage jarg2_, long jarg3, PXCPointF32 jarg3_);
  public final static native int PXCProjection_QueryVertices(long jarg1, PXCProjection jarg1_, long jarg2, PXCImage jarg2_, long jarg3, PXCPoint3DF32 jarg3_);
  public final static native long PXCProjection_CreateColorImageMappedToDepth(long jarg1, PXCProjection jarg1_, long jarg2, PXCImage jarg2_, long jarg3, PXCImage jarg3_);
  public final static native long PXCProjection_CreateDepthImageMappedToColor(long jarg1, PXCProjection jarg1_, long jarg2, PXCImage jarg2_, long jarg3, PXCImage jarg3_);
  public final static native int PXCSenseManager_TIMEOUT_INFINITE_get();
  public final static native int PXCSenseManager_Handler_OnConnect(long jarg1, PXCSenseManager.Handler jarg1_, long jarg2, PXCCapture.Device jarg2_, int jarg3);
  public final static native int PXCSenseManager_Handler_OnModuleSetProfile(long jarg1, PXCSenseManager.Handler jarg1_, int jarg2, long jarg3, PXCBase jarg3_);
  public final static native int PXCSenseManager_Handler_OnModuleProcessedFrame(long jarg1, PXCSenseManager.Handler jarg1_, int jarg2, long jarg3, PXCBase jarg3_, long jarg4, PXCCapture.Sample jarg4_);
  public final static native int PXCSenseManager_Handler_OnNewSample(long jarg1, PXCSenseManager.Handler jarg1_, int jarg2, long jarg3, PXCCapture.Sample jarg3_);
  public final static native long new_PXCSenseManager_Handler();
  public final static native void delete_PXCSenseManager_Handler(long jarg1);
  public final static native long PXCSenseManager_QuerySession(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryCaptureManager(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QuerySample__SWIG_0(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native long PXCSenseManager_QuerySample__SWIG_1(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryFaceSample(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryHandSample(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryEmotionSample(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryTrackerSample(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryModule(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native long PXCSenseManager_QueryFace(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryEmotion(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryTracker(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryHand(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_QueryTouchlessController(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_Query3DSeg(long jarg1, PXCSenseManager jarg1_);
  public final static native long PXCSenseManager_Query3DScan(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_Init__SWIG_0(long jarg1, PXCSenseManager jarg1_, long jarg2, PXCSenseManager.Handler jarg2_);
  public final static native int PXCSenseManager_Init__SWIG_1(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_StreamFrames(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native int PXCSenseManager_IsConnected(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_AcquireFrame__SWIG_0(long jarg1, PXCSenseManager jarg1_, int jarg2, int jarg3);
  public final static native int PXCSenseManager_AcquireFrame__SWIG_1(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native int PXCSenseManager_AcquireFrame__SWIG_2(long jarg1, PXCSenseManager jarg1_);
  public final static native void PXCSenseManager_FlushFrame(long jarg1, PXCSenseManager jarg1_);
  public final static native void PXCSenseManager_ReleaseFrame(long jarg1, PXCSenseManager jarg1_);
  public final static native void PXCSenseManager_Close(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_EnableStreams(long jarg1, PXCSenseManager jarg1_, long jarg2, PXCVideoModule.DataDesc jarg2_);
  public final static native int PXCSenseManager_EnableStream__SWIG_0(long jarg1, PXCSenseManager jarg1_, int jarg2, int jarg3, int jarg4, float jarg5);
  public final static native int PXCSenseManager_EnableStream__SWIG_1(long jarg1, PXCSenseManager jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int PXCSenseManager_EnableStream__SWIG_2(long jarg1, PXCSenseManager jarg1_, int jarg2, int jarg3);
  public final static native int PXCSenseManager_EnableStream__SWIG_3(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native int PXCSenseManager_EnableModule(long jarg1, PXCSenseManager jarg1_, int jarg2, long jarg3, PXCSession.ImplDesc jarg3_);
  public final static native int PXCSenseManager_EnableFace__SWIG_0(long jarg1, PXCSenseManager jarg1_, long jarg2);
  public final static native int PXCSenseManager_EnableFace__SWIG_1(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_EnableEmotion(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_EnableTracker(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_EnableHand__SWIG_0(long jarg1, PXCSenseManager jarg1_, long jarg2);
  public final static native int PXCSenseManager_EnableHand__SWIG_1(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_EnableTouchlessController(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_Enable3DSeg__SWIG_0(long jarg1, PXCSenseManager jarg1_, long jarg2);
  public final static native int PXCSenseManager_Enable3DSeg__SWIG_1(long jarg1, PXCSenseManager jarg1_);
  public final static native int PXCSenseManager_Enable3DScan__SWIG_0(long jarg1, PXCSenseManager jarg1_, long jarg2);
  public final static native int PXCSenseManager_Enable3DScan__SWIG_1(long jarg1, PXCSenseManager jarg1_);
  public final static native void PXCSenseManager_PauseModule(long jarg1, PXCSenseManager jarg1_, int jarg2, int jarg3);
  public final static native void PXCSenseManager_PauseFace(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native void PXCSenseManager_PauseEmotion(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native void PXCSenseManager_PauseTracker(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native void PXCSenseManager_PauseHand(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native void PXCSenseManager_PauseTouchlessController(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native void PXCSenseManager_Pause3DSeg(long jarg1, PXCSenseManager jarg1_, int jarg2);
  public final static native long PXCSenseManager_CreateInstance();
  public final static native long PXCSession_Create();
  public final static native void PXCSession_ImplVersion_major_set(long jarg1, PXCSession.ImplVersion jarg1_, short jarg2);
  public final static native short PXCSession_ImplVersion_major_get(long jarg1, PXCSession.ImplVersion jarg1_);
  public final static native void PXCSession_ImplVersion_minor_set(long jarg1, PXCSession.ImplVersion jarg1_, short jarg2);
  public final static native short PXCSession_ImplVersion_minor_get(long jarg1, PXCSession.ImplVersion jarg1_);
  public final static native long new_PXCSession_ImplVersion();
  public final static native void delete_PXCSession_ImplVersion(long jarg1);
  public final static native int PXCSession_IMPL_GROUP_ANY_get();
  public final static native int PXCSession_IMPL_GROUP_OBJECT_RECOGNITION_get();
  public final static native int PXCSession_IMPL_GROUP_SPEECH_RECOGNITION_get();
  public final static native int PXCSession_IMPL_GROUP_SENSOR_get();
  public final static native int PXCSession_IMPL_GROUP_CORE_get();
  public final static native int PXCSession_IMPL_GROUP_USER_get();
  public final static native int PXCSession_IMPL_SUBGROUP_ANY_get();
  public final static native int PXCSession_IMPL_SUBGROUP_FACE_ANALYSIS_get();
  public final static native int PXCSession_IMPL_SUBGROUP_GESTURE_RECOGNITION_get();
  public final static native int PXCSession_IMPL_SUBGROUP_SEGMENTATION_get();
  public final static native int PXCSession_IMPL_SUBGROUP_PULSE_ESTIMATION_get();
  public final static native int PXCSession_IMPL_SUBGROUP_EMOTION_RECOGNITION_get();
  public final static native int PXCSession_IMPL_SUBGROUP_OBJECT_TRACKING_get();
  public final static native int PXCSession_IMPL_SUBGROUP_3DSEG_get();
  public final static native int PXCSession_IMPL_SUBGROUP_3DSCAN_get();
  public final static native int PXCSession_IMPL_SUBGROUP_AUDIO_CAPTURE_get();
  public final static native int PXCSession_IMPL_SUBGROUP_VIDEO_CAPTURE_get();
  public final static native int PXCSession_IMPL_SUBGROUP_SPEECH_RECOGNITION_get();
  public final static native int PXCSession_IMPL_SUBGROUP_SPEECH_SYNTHESIS_get();
  public final static native void PXCSession_ImplDesc_group_set(long jarg1, PXCSession.ImplDesc jarg1_, int jarg2);
  public final static native int PXCSession_ImplDesc_group_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_subgroup_set(long jarg1, PXCSession.ImplDesc jarg1_, int jarg2);
  public final static native int PXCSession_ImplDesc_subgroup_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_algorithm_set(long jarg1, PXCSession.ImplDesc jarg1_, int jarg2);
  public final static native int PXCSession_ImplDesc_algorithm_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_iuid_set(long jarg1, PXCSession.ImplDesc jarg1_, int jarg2);
  public final static native int PXCSession_ImplDesc_iuid_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_version_set(long jarg1, PXCSession.ImplDesc jarg1_, long jarg2, PXCSession.ImplVersion jarg2_);
  public final static native long PXCSession_ImplDesc_version_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_reserved2_set(long jarg1, PXCSession.ImplDesc jarg1_, int jarg2);
  public final static native int PXCSession_ImplDesc_reserved2_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_merit_set(long jarg1, PXCSession.ImplDesc jarg1_, int jarg2);
  public final static native int PXCSession_ImplDesc_merit_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_vendor_set(long jarg1, PXCSession.ImplDesc jarg1_, int jarg2);
  public final static native int PXCSession_ImplDesc_vendor_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_cuids_set(long jarg1, PXCSession.ImplDesc jarg1_, long jarg2);
  public final static native long PXCSession_ImplDesc_cuids_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_friendlyName_set(long jarg1, PXCSession.ImplDesc jarg1_, long jarg2);
  public final static native long PXCSession_ImplDesc_friendlyName_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native void PXCSession_ImplDesc_reserved_set(long jarg1, PXCSession.ImplDesc jarg1_, long jarg2);
  public final static native long PXCSession_ImplDesc_reserved_get(long jarg1, PXCSession.ImplDesc jarg1_);
  public final static native long new_PXCSession_ImplDesc();
  public final static native void delete_PXCSession_ImplDesc(long jarg1);
  public final static native long PXCSession_QueryVersion(long jarg1, PXCSession jarg1_);
  public final static native int PXCSession_QueryImpl(long jarg1, PXCSession jarg1_, long jarg2, PXCSession.ImplDesc jarg2_, int jarg3, long jarg4, PXCSession.ImplDesc jarg4_);
  public final static native int PXCSession_CreateImpl__SWIG_0(long jarg1, PXCSession jarg1_, long jarg2, PXCSession.ImplDesc jarg2_, int jarg3, int jarg4, long jarg5);
  public final static native int PXCSession_CreateImpl__SWIG_1(long jarg1, PXCSession jarg1_, long jarg2, PXCSession.ImplDesc jarg2_, int jarg3, long jarg4);
  public final static native int PXCSession_CreateImpl__SWIG_2(long jarg1, PXCSession jarg1_, int jarg2, long jarg3);
  public final static native long PXCSession_CreateSenseManager(long jarg1, PXCSession jarg1_);
  public final static native long PXCSession_CreateCaptureManager(long jarg1, PXCSession jarg1_);
  public final static native long PXCSession_CreateAudioSource(long jarg1, PXCSession jarg1_);
  public final static native int PXCSession_QueryModuleDesc(long jarg1, PXCSession jarg1_, long jarg2, PXCBase jarg2_, long jarg3, PXCSession.ImplDesc jarg3_);
  public final static native long PXCSession_CreateImage__SWIG_0(long jarg1, PXCSession jarg1_, long jarg2, PXCImage.ImageInfo jarg2_, long jarg3, PXCImage.ImageData jarg3_);
  public final static native long PXCSession_CreateImage__SWIG_1(long jarg1, PXCSession jarg1_, long jarg2, PXCImage.ImageInfo jarg2_);
  public final static native long PXCSession_CreateAudio__SWIG_0(long jarg1, PXCSession jarg1_, long jarg2, PXCAudio.AudioInfo jarg2_, long jarg3, PXCAudio.AudioData jarg3_);
  public final static native long PXCSession_CreateAudio__SWIG_1(long jarg1, PXCSession jarg1_, long jarg2, PXCAudio.AudioInfo jarg2_);
  public final static native int PXCSession_LoadImplFromFile(long jarg1, PXCSession jarg1_, long jarg2);
  public final static native int PXCSession_UnloadImplFromFile(long jarg1, PXCSession jarg1_, long jarg2);
  public final static native long PXCSession_CreateInstance();
  public final static native int PXCSpeechRecognition_NBEST_SIZE_get();
  public final static native int PXCSpeechRecognition_SENTENCE_BUFFER_SIZE_get();
  public final static native int PXCSpeechRecognition_TAG_BUFFER_SIZE_get();
  public final static native void PXCSpeechRecognition_NBest_label_set(long jarg1, PXCSpeechRecognition.NBest jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_NBest_label_get(long jarg1, PXCSpeechRecognition.NBest jarg1_);
  public final static native void PXCSpeechRecognition_NBest_confidence_set(long jarg1, PXCSpeechRecognition.NBest jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_NBest_confidence_get(long jarg1, PXCSpeechRecognition.NBest jarg1_);
  public final static native void PXCSpeechRecognition_NBest_sentence_set(long jarg1, PXCSpeechRecognition.NBest jarg1_, long jarg2);
  public final static native long PXCSpeechRecognition_NBest_sentence_get(long jarg1, PXCSpeechRecognition.NBest jarg1_);
  public final static native void PXCSpeechRecognition_NBest_tags_set(long jarg1, PXCSpeechRecognition.NBest jarg1_, long jarg2);
  public final static native long PXCSpeechRecognition_NBest_tags_get(long jarg1, PXCSpeechRecognition.NBest jarg1_);
  public final static native long new_PXCSpeechRecognition_NBest();
  public final static native void delete_PXCSpeechRecognition_NBest(long jarg1);
  public final static native void PXCSpeechRecognition_RecognitionData_timeStamp_set(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_, long jarg2);
  public final static native long PXCSpeechRecognition_RecognitionData_timeStamp_get(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_);
  public final static native void PXCSpeechRecognition_RecognitionData_grammar_set(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_RecognitionData_grammar_get(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_);
  public final static native void PXCSpeechRecognition_RecognitionData_duration_set(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_RecognitionData_duration_get(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_);
  public final static native void PXCSpeechRecognition_RecognitionData_scores_set(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_, long jarg2, PXCSpeechRecognition.NBest jarg2_);
  public final static native long PXCSpeechRecognition_RecognitionData_scores_get(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_);
  public final static native void PXCSpeechRecognition_RecognitionData_reserved_set(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_, long jarg2);
  public final static native long PXCSpeechRecognition_RecognitionData_reserved_get(long jarg1, PXCSpeechRecognition.RecognitionData jarg1_);
  public final static native long new_PXCSpeechRecognition_RecognitionData();
  public final static native void delete_PXCSpeechRecognition_RecognitionData(long jarg1);
  public final static native int PXCSpeechRecognition_ALERT_VOLUME_HIGH_get();
  public final static native int PXCSpeechRecognition_ALERT_VOLUME_LOW_get();
  public final static native int PXCSpeechRecognition_ALERT_SNR_LOW_get();
  public final static native int PXCSpeechRecognition_ALERT_SPEECH_UNRECOGNIZABLE_get();
  public final static native int PXCSpeechRecognition_ALERT_SPEECH_BEGIN_get();
  public final static native int PXCSpeechRecognition_ALERT_SPEECH_END_get();
  public final static native int PXCSpeechRecognition_ALERT_RECOGNITION_ABORTED_get();
  public final static native int PXCSpeechRecognition_ALERT_RECOGNITION_END_get();
  public final static native void PXCSpeechRecognition_AlertData_timeStamp_set(long jarg1, PXCSpeechRecognition.AlertData jarg1_, long jarg2);
  public final static native long PXCSpeechRecognition_AlertData_timeStamp_get(long jarg1, PXCSpeechRecognition.AlertData jarg1_);
  public final static native void PXCSpeechRecognition_AlertData_label_set(long jarg1, PXCSpeechRecognition.AlertData jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_AlertData_label_get(long jarg1, PXCSpeechRecognition.AlertData jarg1_);
  public final static native void PXCSpeechRecognition_AlertData_reserved_set(long jarg1, PXCSpeechRecognition.AlertData jarg1_, long jarg2);
  public final static native long PXCSpeechRecognition_AlertData_reserved_get(long jarg1, PXCSpeechRecognition.AlertData jarg1_);
  public final static native long new_PXCSpeechRecognition_AlertData();
  public final static native void delete_PXCSpeechRecognition_AlertData(long jarg1);
  public final static native void PXCSpeechRecognition_Handler_OnRecognition(long jarg1, PXCSpeechRecognition.Handler jarg1_, long jarg2, PXCSpeechRecognition.RecognitionData jarg2_);
  public final static native void PXCSpeechRecognition_Handler_OnAlert(long jarg1, PXCSpeechRecognition.Handler jarg1_, long jarg2, PXCSpeechRecognition.AlertData jarg2_);
  public final static native long new_PXCSpeechRecognition_Handler();
  public final static native void delete_PXCSpeechRecognition_Handler(long jarg1);
  public final static native int PXCSpeechRecognition_LANGUAGE_US_ENGLISH_get();
  public final static native int PXCSpeechRecognition_LANGUAGE_GB_ENGLISH_get();
  public final static native int PXCSpeechRecognition_LANGUAGE_DE_GERMAN_get();
  public final static native int PXCSpeechRecognition_LANGUAGE_US_SPANISH_get();
  public final static native int PXCSpeechRecognition_LANGUAGE_FR_FRENCH_get();
  public final static native int PXCSpeechRecognition_LANGUAGE_IT_ITALIAN_get();
  public final static native int PXCSpeechRecognition_LANGUAGE_JP_JAPANESE_get();
  public final static native int PXCSpeechRecognition_LANGUAGE_CN_CHINESE_get();
  public final static native int PXCSpeechRecognition_LANGUAGE_BR_PORTUGUESE_get();
  public final static native int PXCSpeechRecognition_LANGUAGE_RU_RUSSIAN_get();
  public final static native void PXCSpeechRecognition_ProfileInfo_speaker_set(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_, long jarg2);
  public final static native long PXCSpeechRecognition_ProfileInfo_speaker_get(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_);
  public final static native void PXCSpeechRecognition_ProfileInfo_language_set(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_ProfileInfo_language_get(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_);
  public final static native void PXCSpeechRecognition_ProfileInfo_endOfSentence_set(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_ProfileInfo_endOfSentence_get(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_);
  public final static native void PXCSpeechRecognition_ProfileInfo_threshold_set(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_ProfileInfo_threshold_get(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_);
  public final static native void PXCSpeechRecognition_ProfileInfo_reserved_set(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_, long jarg2);
  public final static native long PXCSpeechRecognition_ProfileInfo_reserved_get(long jarg1, PXCSpeechRecognition.ProfileInfo jarg1_);
  public final static native long new_PXCSpeechRecognition_ProfileInfo();
  public final static native void delete_PXCSpeechRecognition_ProfileInfo(long jarg1);
  public final static native int PXCSpeechRecognition_GFT_NONE_get();
  public final static native int PXCSpeechRecognition_GFT_LIST_get();
  public final static native int PXCSpeechRecognition_GFT_JSGF_get();
  public final static native int PXCSpeechRecognition_GFT_COMPILED_CONTEXT_get();
  public final static native int PXCSpeechRecognition_VFT_NONE_get();
  public final static native int PXCSpeechRecognition_VFT_LIST_get();
  public final static native int PXCSpeechRecognition_QueryProfile__SWIG_0(long jarg1, PXCSpeechRecognition jarg1_, int jarg2, long jarg3, PXCSpeechRecognition.ProfileInfo jarg3_);
  public final static native int PXCSpeechRecognition_QueryProfile__SWIG_1(long jarg1, PXCSpeechRecognition jarg1_, long jarg2, PXCSpeechRecognition.ProfileInfo jarg2_);
  public final static native int PXCSpeechRecognition_SetProfile(long jarg1, PXCSpeechRecognition jarg1_, long jarg2, PXCSpeechRecognition.ProfileInfo jarg2_);
  public final static native int PXCSpeechRecognition_BuildGrammarFromStringList(long jarg1, PXCSpeechRecognition jarg1_, int jarg2, long jarg3, long jarg4, int jarg5);
  public final static native int PXCSpeechRecognition_ReleaseGrammar(long jarg1, PXCSpeechRecognition jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_SetGrammar(long jarg1, PXCSpeechRecognition jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_SetDictation(long jarg1, PXCSpeechRecognition jarg1_);
  public final static native int PXCSpeechRecognition_StartRec(long jarg1, PXCSpeechRecognition jarg1_, long jarg2, PXCAudioSource jarg2_, long jarg3, PXCSpeechRecognition.Handler jarg3_);
  public final static native void PXCSpeechRecognition_StopRec(long jarg1, PXCSpeechRecognition jarg1_);
  public final static native int PXCSpeechRecognition_BuildGrammarFromFile(long jarg1, PXCSpeechRecognition jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int PXCSpeechRecognition_BuildGrammarFromMemory(long jarg1, PXCSpeechRecognition jarg1_, int jarg2, int jarg3, long jarg4, int jarg5);
  public final static native long PXCSpeechRecognition_GetGrammarCompileErrors(long jarg1, PXCSpeechRecognition jarg1_, int jarg2);
  public final static native int PXCSpeechRecognition_AddVocabToDictation(long jarg1, PXCSpeechRecognition jarg1_, int jarg2, long jarg3);
  public final static native int PXCSpeechSynthesis_LANGUAGE_US_ENGLISH_get();
  public final static native int PXCSpeechSynthesis_LANGUAGE_GB_ENGLISH_get();
  public final static native int PXCSpeechSynthesis_LANGUAGE_DE_GERMAN_get();
  public final static native int PXCSpeechSynthesis_LANGUAGE_US_SPANISH_get();
  public final static native int PXCSpeechSynthesis_LANGUAGE_FR_FRENCH_get();
  public final static native int PXCSpeechSynthesis_LANGUAGE_IT_ITALIAN_get();
  public final static native int PXCSpeechSynthesis_LANGUAGE_JP_JAPANESE_get();
  public final static native int PXCSpeechSynthesis_LANGUAGE_CN_CHINESE_get();
  public final static native int PXCSpeechSynthesis_LANGUAGE_BR_PORTUGUESE_get();
  public final static native int PXCSpeechSynthesis_VOICE_ANY_get();
  public final static native void PXCSpeechSynthesis_ProfileInfo_outputs_set(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_, long jarg2, PXCAudio.AudioInfo jarg2_);
  public final static native long PXCSpeechSynthesis_ProfileInfo_outputs_get(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_);
  public final static native void PXCSpeechSynthesis_ProfileInfo_language_set(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_, int jarg2);
  public final static native int PXCSpeechSynthesis_ProfileInfo_language_get(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_);
  public final static native void PXCSpeechSynthesis_ProfileInfo_voice_set(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_, int jarg2);
  public final static native int PXCSpeechSynthesis_ProfileInfo_voice_get(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_);
  public final static native void PXCSpeechSynthesis_ProfileInfo_rate_set(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_, float jarg2);
  public final static native float PXCSpeechSynthesis_ProfileInfo_rate_get(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_);
  public final static native void PXCSpeechSynthesis_ProfileInfo_volume_set(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_, int jarg2);
  public final static native int PXCSpeechSynthesis_ProfileInfo_volume_get(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_);
  public final static native void PXCSpeechSynthesis_ProfileInfo_pitch_set(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_, int jarg2);
  public final static native int PXCSpeechSynthesis_ProfileInfo_pitch_get(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_);
  public final static native void PXCSpeechSynthesis_ProfileInfo_eosPauseDuration_set(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_, int jarg2);
  public final static native int PXCSpeechSynthesis_ProfileInfo_eosPauseDuration_get(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_);
  public final static native void PXCSpeechSynthesis_ProfileInfo_reserved_set(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_, long jarg2);
  public final static native long PXCSpeechSynthesis_ProfileInfo_reserved_get(long jarg1, PXCSpeechSynthesis.ProfileInfo jarg1_);
  public final static native long new_PXCSpeechSynthesis_ProfileInfo();
  public final static native void delete_PXCSpeechSynthesis_ProfileInfo(long jarg1);
  public final static native int PXCSpeechSynthesis_QueryProfile__SWIG_0(long jarg1, PXCSpeechSynthesis jarg1_, int jarg2, long jarg3, PXCSpeechSynthesis.ProfileInfo jarg3_);
  public final static native int PXCSpeechSynthesis_QueryProfile__SWIG_1(long jarg1, PXCSpeechSynthesis jarg1_, long jarg2, PXCSpeechSynthesis.ProfileInfo jarg2_);
  public final static native int PXCSpeechSynthesis_SetProfile(long jarg1, PXCSpeechSynthesis jarg1_, long jarg2, PXCSpeechSynthesis.ProfileInfo jarg2_);
  public final static native int PXCSpeechSynthesis_BuildSentence(long jarg1, PXCSpeechSynthesis jarg1_, int jarg2, long jarg3);
  public final static native long PXCSpeechSynthesis_QueryBuffer(long jarg1, PXCSpeechSynthesis jarg1_, int jarg2, int jarg3);
  public final static native int PXCSpeechSynthesis_QueryBufferNum(long jarg1, PXCSpeechSynthesis jarg1_, int jarg2);
  public final static native int PXCSpeechSynthesis_QuerySampleNum(long jarg1, PXCSpeechSynthesis jarg1_, int jarg2);
  public final static native void PXCSpeechSynthesis_ReleaseSentence(long jarg1, PXCSpeechSynthesis jarg1_, int jarg2);
  public final static native int PXC_STATUS_NO_ERROR_get();
  public final static native int PXC_STATUS_FEATURE_UNSUPPORTED_get();
  public final static native int PXC_STATUS_PARAM_UNSUPPORTED_get();
  public final static native int PXC_STATUS_ITEM_UNAVAILABLE_get();
  public final static native int PXC_STATUS_HANDLE_INVALID_get();
  public final static native int PXC_STATUS_ALLOC_FAILED_get();
  public final static native int PXC_STATUS_DEVICE_FAILED_get();
  public final static native int PXC_STATUS_DEVICE_LOST_get();
  public final static native int PXC_STATUS_DEVICE_BUSY_get();
  public final static native int PXC_STATUS_EXEC_ABORTED_get();
  public final static native int PXC_STATUS_EXEC_INPROGRESS_get();
  public final static native int PXC_STATUS_EXEC_TIMEOUT_get();
  public final static native int PXC_STATUS_FILE_WRITE_FAILED_get();
  public final static native int PXC_STATUS_FILE_READ_FAILED_get();
  public final static native int PXC_STATUS_FILE_CLOSE_FAILED_get();
  public final static native int PXC_STATUS_DATA_UNAVAILABLE_get();
  public final static native int PXC_STATUS_DATA_NOT_INITIALIZED_get();
  public final static native int PXC_STATUS_INIT_FAILED_get();
  public final static native int PXC_STATUS_STREAM_CONFIG_CHANGED_get();
  public final static native int PXC_STATUS_POWER_UID_ALREADY_REGISTERED_get();
  public final static native int PXC_STATUS_POWER_UID_NOT_REGISTERED_get();
  public final static native int PXC_STATUS_POWER_ILLEGAL_STATE_get();
  public final static native int PXC_STATUS_POWER_PROVIDER_NOT_EXISTS_get();
  public final static native int PXC_STATUS_CAPTURE_CONFIG_ALREADY_SET_get();
  public final static native int PXC_STATUS_TIME_GAP_get();
  public final static native int PXC_STATUS_PARAM_INPLACE_get();
  public final static native int PXC_STATUS_DATA_NOT_CHANGED_get();
  public final static native int PXC_STATUS_PROCESS_FAILED_get();
  public final static native int PXCSyncPoint_TIMEOUT_INFINITE_get();
  public final static native int PXCSyncPoint_SYNCEX_LIMIT_get();
  public final static native int PXCSyncPoint_Synchronize__SWIG_0(long jarg1, PXCSyncPoint jarg1_, int jarg2);
  public final static native int PXCSyncPoint_Synchronize__SWIG_1(long jarg1, PXCSyncPoint jarg1_);
  public final static native int PXCSyncPoint_SynchronizeEx__SWIG_0(int jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6);
  public final static native int PXCSyncPoint_SynchronizeEx__SWIG_1(int jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int PXCSyncPoint_SynchronizeEx__SWIG_2(int jarg1, long jarg2, long jarg3);
  public final static native int PXCSyncPoint_SynchronizeEx__SWIG_3(int jarg1, long jarg2);
  public final static native void PXCSyncPoint_ReleaseSP(long jarg1, int jarg2, int jarg3);
  public final static native int PXCTouchlessController_Configuration_None_get();
  public final static native int PXCTouchlessController_Configuration_Allow_Zoom_get();
  public final static native int PXCTouchlessController_Configuration_Use_Draw_Mode_get();
  public final static native int PXCTouchlessController_Configuration_Scroll_Horizontally_get();
  public final static native int PXCTouchlessController_Configuration_Scroll_Vertically_get();
  public final static native int PXCTouchlessController_Configuration_Meta_Context_Menu_get();
  public final static native int PXCTouchlessController_Configuration_Enable_Injection_get();
  public final static native int PXCTouchlessController_Configuration_Edge_Scroll_Horizontally_get();
  public final static native int PXCTouchlessController_Configuration_Edge_Scroll_Vertically_get();
  public final static native int PXCTouchlessController_Configuration_Hide_Cursor_After_Touch_Injection_get();
  public final static native int PXCTouchlessController_Configuration_Allow_Back_get();
  public final static native void PXCTouchlessController_ProfileInfo_handModule_set(long jarg1, PXCTouchlessController.ProfileInfo jarg1_, long jarg2, PXCHandModule jarg2_);
  public final static native long PXCTouchlessController_ProfileInfo_handModule_get(long jarg1, PXCTouchlessController.ProfileInfo jarg1_);
  public final static native void PXCTouchlessController_ProfileInfo_config_set(long jarg1, PXCTouchlessController.ProfileInfo jarg1_, int jarg2);
  public final static native int PXCTouchlessController_ProfileInfo_config_get(long jarg1, PXCTouchlessController.ProfileInfo jarg1_);
  public final static native long new_PXCTouchlessController_ProfileInfo();
  public final static native void delete_PXCTouchlessController_ProfileInfo(long jarg1);
  public final static native int PXCTouchlessController_QueryProfile(long jarg1, PXCTouchlessController jarg1_, long jarg2, PXCTouchlessController.ProfileInfo jarg2_);
  public final static native int PXCTouchlessController_SetProfile(long jarg1, PXCTouchlessController jarg1_, long jarg2, PXCTouchlessController.ProfileInfo jarg2_);
  public final static native void PXCTouchlessController_UXEventData_type_set(long jarg1, PXCTouchlessController.UXEventData jarg1_, int jarg2);
  public final static native int PXCTouchlessController_UXEventData_type_get(long jarg1, PXCTouchlessController.UXEventData jarg1_);
  public final static native void PXCTouchlessController_UXEventData_position_set(long jarg1, PXCTouchlessController.UXEventData jarg1_, long jarg2, PXCPoint3DF32 jarg2_);
  public final static native long PXCTouchlessController_UXEventData_position_get(long jarg1, PXCTouchlessController.UXEventData jarg1_);
  public final static native void PXCTouchlessController_UXEventData_bodySide_set(long jarg1, PXCTouchlessController.UXEventData jarg1_, int jarg2);
  public final static native int PXCTouchlessController_UXEventData_bodySide_get(long jarg1, PXCTouchlessController.UXEventData jarg1_);
  public final static native long new_PXCTouchlessController_UXEventData();
  public final static native void delete_PXCTouchlessController_UXEventData(long jarg1);
  public final static native void delete_PXCTouchlessController_UXEventHandler(long jarg1);
  public final static native void PXCTouchlessController_UXEventHandler_OnFiredUXEvent(long jarg1, PXCTouchlessController.UXEventHandler jarg1_, long jarg2, PXCTouchlessController.UXEventData jarg2_);
  public final static native int PXCTouchlessController_SubscribeEvent(long jarg1, PXCTouchlessController jarg1_, long jarg2, PXCTouchlessController.UXEventHandler jarg2_);
  public final static native int PXCTouchlessController_UnsubscribeEvent(long jarg1, PXCTouchlessController jarg1_, long jarg2, PXCTouchlessController.UXEventHandler jarg2_);
  public final static native void PXCTouchlessController_AlertData_type_set(long jarg1, PXCTouchlessController.AlertData jarg1_, int jarg2);
  public final static native int PXCTouchlessController_AlertData_type_get(long jarg1, PXCTouchlessController.AlertData jarg1_);
  public final static native long new_PXCTouchlessController_AlertData();
  public final static native void delete_PXCTouchlessController_AlertData(long jarg1);
  public final static native void delete_PXCTouchlessController_AlertHandler(long jarg1);
  public final static native void PXCTouchlessController_AlertHandler_OnFiredAlert(long jarg1, PXCTouchlessController.AlertHandler jarg1_, long jarg2, PXCTouchlessController.AlertData jarg2_);
  public final static native int PXCTouchlessController_SubscribeAlert(long jarg1, PXCTouchlessController jarg1_, long jarg2, PXCTouchlessController.AlertHandler jarg2_);
  public final static native int PXCTouchlessController_UnsubscribeAlert(long jarg1, PXCTouchlessController jarg1_, long jarg2, PXCTouchlessController.AlertHandler jarg2_);
  public final static native int PXCTouchlessController_Action_None_get();
  public final static native void delete_PXCTouchlessController_ActionHandler(long jarg1);
  public final static native void PXCTouchlessController_ActionHandler_OnFiredAction(long jarg1, PXCTouchlessController.ActionHandler jarg1_, int jarg2);
  public final static native int PXCTouchlessController_AddGestureActionMapping__SWIG_0(long jarg1, PXCTouchlessController jarg1_, long jarg2, int jarg3, long jarg4, PXCTouchlessController.ActionHandler jarg4_);
  public final static native int PXCTouchlessController_AddGestureActionMapping__SWIG_1(long jarg1, PXCTouchlessController jarg1_, long jarg2, int jarg3);
  public final static native int PXCTouchlessController_ClearAllGestureActionMappings(long jarg1, PXCTouchlessController jarg1_);
  public final static native int PXCTracker_ETS_UNKNOWN_get();
  public final static native int PXCTracker_ETS_NOT_TRACKING_get();
  public final static native int PXCTracker_ETS_TRACKING_get();
  public final static native int PXCTracker_ETS_LOST_get();
  public final static native int PXCTracker_ETS_FOUND_get();
  public final static native int PXCTracker_ETS_EXTRAPOLATED_get();
  public final static native int PXCTracker_ETS_INITIALIZED_get();
  public final static native int PXCTracker_ETS_REGISTERED_get();
  public final static native void PXCTracker_TrackingValues_state_set(long jarg1, PXCTracker.TrackingValues jarg1_, int jarg2);
  public final static native int PXCTracker_TrackingValues_state_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_translation_set(long jarg1, PXCTracker.TrackingValues jarg1_, long jarg2, PXCPoint3DF32 jarg2_);
  public final static native long PXCTracker_TrackingValues_translation_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_rotation_set(long jarg1, PXCTracker.TrackingValues jarg1_, long jarg2, PXCPoint4DF32 jarg2_);
  public final static native long PXCTracker_TrackingValues_rotation_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_quality_set(long jarg1, PXCTracker.TrackingValues jarg1_, float jarg2);
  public final static native float PXCTracker_TrackingValues_quality_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_timeElapsed_set(long jarg1, PXCTracker.TrackingValues jarg1_, double jarg2);
  public final static native double PXCTracker_TrackingValues_timeElapsed_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_trackingTimeMs_set(long jarg1, PXCTracker.TrackingValues jarg1_, double jarg2);
  public final static native double PXCTracker_TrackingValues_trackingTimeMs_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_cosID_set(long jarg1, PXCTracker.TrackingValues jarg1_, int jarg2);
  public final static native int PXCTracker_TrackingValues_cosID_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_targetName_set(long jarg1, PXCTracker.TrackingValues jarg1_, long jarg2);
  public final static native long PXCTracker_TrackingValues_targetName_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_additionalValues_set(long jarg1, PXCTracker.TrackingValues jarg1_, long jarg2);
  public final static native long PXCTracker_TrackingValues_additionalValues_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_sensor_set(long jarg1, PXCTracker.TrackingValues jarg1_, long jarg2);
  public final static native long PXCTracker_TrackingValues_sensor_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native void PXCTracker_TrackingValues_reserved_set(long jarg1, PXCTracker.TrackingValues jarg1_, long jarg2);
  public final static native long PXCTracker_TrackingValues_reserved_get(long jarg1, PXCTracker.TrackingValues jarg1_);
  public final static native long new_PXCTracker_TrackingValues();
  public final static native void delete_PXCTracker_TrackingValues(long jarg1);
  public final static native int PXCTracker_SetCameraParameters(long jarg1, PXCTracker jarg1_, long jarg2);
  public final static native int PXCTracker_Set2DTrackFromFile__SWIG_0(long jarg1, PXCTracker jarg1_, long jarg2, long jarg3, float jarg4, float jarg5, float jarg6);
  public final static native int PXCTracker_Set2DTrackFromFile__SWIG_1(long jarg1, PXCTracker jarg1_, long jarg2, long jarg3);
  public final static native int PXCTracker_Set2DTrackFromImage__SWIG_0(long jarg1, PXCTracker jarg1_, long jarg2, PXCImage jarg2_, long jarg3, float jarg4, float jarg5, float jarg6);
  public final static native int PXCTracker_Set2DTrackFromImage__SWIG_1(long jarg1, PXCTracker jarg1_, long jarg2, PXCImage jarg2_, long jarg3);
  public final static native int PXCTracker_Set3DTrack(long jarg1, PXCTracker jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int PXCTracker_Set3DInstantTrack__SWIG_0(long jarg1, PXCTracker jarg1_, int jarg2);
  public final static native int PXCTracker_Set3DInstantTrack__SWIG_1(long jarg1, PXCTracker jarg1_);
  public final static native int PXCTracker_QueryNumberTrackingValues(long jarg1, PXCTracker jarg1_);
  public final static native int PXCTracker_QueryAllTrackingValues(long jarg1, PXCTracker jarg1_, long jarg2, PXCTracker.TrackingValues jarg2_);
  public final static native int PXCTracker_QueryTrackingValues(long jarg1, PXCTracker jarg1_, int jarg2, long jarg3, PXCTracker.TrackingValues jarg3_);
  public final static native int PXC_VERSION_MAJOR_get();
  public final static native int PXC_VERSION_MINOR_get();
  public final static native int PXC_VERSION_BUILD_get();
  public final static native int PXC_VERSION_REVISION_get();
  public final static native int PXCVideoModule_DEVCAP_LIMIT_get();
  public final static native void PXCVideoModule_DeviceCap_label_set(long jarg1, PXCVideoModule.DeviceCap jarg1_, int jarg2);
  public final static native int PXCVideoModule_DeviceCap_label_get(long jarg1, PXCVideoModule.DeviceCap jarg1_);
  public final static native void PXCVideoModule_DeviceCap_value_set(long jarg1, PXCVideoModule.DeviceCap jarg1_, float jarg2);
  public final static native float PXCVideoModule_DeviceCap_value_get(long jarg1, PXCVideoModule.DeviceCap jarg1_);
  public final static native long new_PXCVideoModule_DeviceCap();
  public final static native void delete_PXCVideoModule_DeviceCap(long jarg1);
  public final static native void PXCVideoModule_StreamDesc_sizeMin_set(long jarg1, PXCVideoModule.StreamDesc jarg1_, long jarg2, PXCSizeI32 jarg2_);
  public final static native long PXCVideoModule_StreamDesc_sizeMin_get(long jarg1, PXCVideoModule.StreamDesc jarg1_);
  public final static native void PXCVideoModule_StreamDesc_sizeMax_set(long jarg1, PXCVideoModule.StreamDesc jarg1_, long jarg2, PXCSizeI32 jarg2_);
  public final static native long PXCVideoModule_StreamDesc_sizeMax_get(long jarg1, PXCVideoModule.StreamDesc jarg1_);
  public final static native void PXCVideoModule_StreamDesc_frameRate_set(long jarg1, PXCVideoModule.StreamDesc jarg1_, long jarg2, PXCRangeF32 jarg2_);
  public final static native long PXCVideoModule_StreamDesc_frameRate_get(long jarg1, PXCVideoModule.StreamDesc jarg1_);
  public final static native void PXCVideoModule_StreamDesc_reserved_set(long jarg1, PXCVideoModule.StreamDesc jarg1_, long jarg2);
  public final static native long PXCVideoModule_StreamDesc_reserved_get(long jarg1, PXCVideoModule.StreamDesc jarg1_);
  public final static native long new_PXCVideoModule_StreamDesc();
  public final static native void delete_PXCVideoModule_StreamDesc(long jarg1);
  public final static native void PXCVideoModule_StreamDescSet_color_set(long jarg1, PXCVideoModule.StreamDescSet jarg1_, long jarg2, PXCVideoModule.StreamDesc jarg2_);
  public final static native long PXCVideoModule_StreamDescSet_color_get(long jarg1, PXCVideoModule.StreamDescSet jarg1_);
  public final static native void PXCVideoModule_StreamDescSet_depth_set(long jarg1, PXCVideoModule.StreamDescSet jarg1_, long jarg2, PXCVideoModule.StreamDesc jarg2_);
  public final static native long PXCVideoModule_StreamDescSet_depth_get(long jarg1, PXCVideoModule.StreamDescSet jarg1_);
  public final static native void PXCVideoModule_StreamDescSet_ir_set(long jarg1, PXCVideoModule.StreamDescSet jarg1_, long jarg2, PXCVideoModule.StreamDesc jarg2_);
  public final static native long PXCVideoModule_StreamDescSet_ir_get(long jarg1, PXCVideoModule.StreamDescSet jarg1_);
  public final static native void PXCVideoModule_StreamDescSet_left_set(long jarg1, PXCVideoModule.StreamDescSet jarg1_, long jarg2, PXCVideoModule.StreamDesc jarg2_);
  public final static native long PXCVideoModule_StreamDescSet_left_get(long jarg1, PXCVideoModule.StreamDescSet jarg1_);
  public final static native void PXCVideoModule_StreamDescSet_right_set(long jarg1, PXCVideoModule.StreamDescSet jarg1_, long jarg2, PXCVideoModule.StreamDesc jarg2_);
  public final static native long PXCVideoModule_StreamDescSet_right_get(long jarg1, PXCVideoModule.StreamDescSet jarg1_);
  public final static native void PXCVideoModule_StreamDescSet_reserved_set(long jarg1, PXCVideoModule.StreamDescSet jarg1_, long jarg2, PXCVideoModule.StreamDesc jarg2_);
  public final static native long PXCVideoModule_StreamDescSet_reserved_get(long jarg1, PXCVideoModule.StreamDescSet jarg1_);
  public final static native long new_PXCVideoModule_StreamDescSet();
  public final static native void delete_PXCVideoModule_StreamDescSet(long jarg1);
  public final static native void PXCVideoModule_DataDesc_streams_set(long jarg1, PXCVideoModule.DataDesc jarg1_, long jarg2, PXCVideoModule.StreamDescSet jarg2_);
  public final static native long PXCVideoModule_DataDesc_streams_get(long jarg1, PXCVideoModule.DataDesc jarg1_);
  public final static native void PXCVideoModule_DataDesc_devCaps_set(long jarg1, PXCVideoModule.DataDesc jarg1_, long jarg2, PXCVideoModule.DeviceCap jarg2_);
  public final static native long PXCVideoModule_DataDesc_devCaps_get(long jarg1, PXCVideoModule.DataDesc jarg1_);
  public final static native void PXCVideoModule_DataDesc_deviceInfo_set(long jarg1, PXCVideoModule.DataDesc jarg1_, long jarg2, PXCCapture.DeviceInfo jarg2_);
  public final static native long PXCVideoModule_DataDesc_deviceInfo_get(long jarg1, PXCVideoModule.DataDesc jarg1_);
  public final static native void PXCVideoModule_DataDesc_reserved_set(long jarg1, PXCVideoModule.DataDesc jarg1_, long jarg2);
  public final static native long PXCVideoModule_DataDesc_reserved_get(long jarg1, PXCVideoModule.DataDesc jarg1_);
  public final static native long new_PXCVideoModule_DataDesc();
  public final static native void delete_PXCVideoModule_DataDesc(long jarg1);
  public final static native int PXCVideoModule_QueryCaptureProfile__SWIG_0(long jarg1, PXCVideoModule jarg1_, int jarg2, long jarg3, PXCVideoModule.DataDesc jarg3_);
  public final static native int PXCVideoModule_QueryCaptureProfile__SWIG_1(long jarg1, PXCVideoModule jarg1_, long jarg2, PXCVideoModule.DataDesc jarg2_);
  public final static native int PXCVideoModule_SetCaptureProfile(long jarg1, PXCVideoModule jarg1_, long jarg2, PXCVideoModule.DataDesc jarg2_);
  public final static native int PXCVideoModule_ProcessImageAsync(long jarg1, PXCVideoModule jarg1_, long jarg2, PXCCapture.Sample jarg2_, long jarg3);

	static {
		new com.badlogic.gdx.utils.SharedLibraryLoader().load("gdx-realsense");
	}

  public final static native long PXC3DScan_SWIGUpcast(long jarg1);
  public final static native long PXC3DSeg_SWIGUpcast(long jarg1);
  public final static native long PXCAudio_SWIGUpcast(long jarg1);
  public final static native long PXCAudioSource_SWIGUpcast(long jarg1);
  public final static native long PXCCapture_Device_SWIGUpcast(long jarg1);
  public final static native long PXCCapture_SWIGUpcast(long jarg1);
  public final static native long PXCCaptureManager_SWIGUpcast(long jarg1);
  public final static native long PXCEmotion_SWIGUpcast(long jarg1);
  public final static native long PXCFaceConfiguration_SWIGUpcast(long jarg1);
  public final static native long PXCFaceData_SWIGUpcast(long jarg1);
  public final static native long PXCFaceModule_SWIGUpcast(long jarg1);
  public final static native long PXCHandConfiguration_SWIGUpcast(long jarg1);
  public final static native long PXCHandData_SWIGUpcast(long jarg1);
  public final static native long PXCHandModule_SWIGUpcast(long jarg1);
  public final static native long PXCImage_SWIGUpcast(long jarg1);
  public final static native long PXCMetadata_SWIGUpcast(long jarg1);
  public final static native long PXCPowerState_SWIGUpcast(long jarg1);
  public final static native long PXCProjection_SWIGUpcast(long jarg1);
  public final static native long PXCSenseManager_SWIGUpcast(long jarg1);
  public final static native long PXCSession_SWIGUpcast(long jarg1);
  public final static native long PXCSpeechRecognition_SWIGUpcast(long jarg1);
  public final static native long PXCSpeechSynthesis_SWIGUpcast(long jarg1);
  public final static native long PXCSyncPoint_SWIGUpcast(long jarg1);
  public final static native long PXCTouchlessController_SWIGUpcast(long jarg1);
  public final static native long PXCTracker_SWIGUpcast(long jarg1);
  public final static native long PXCVideoModule_SWIGUpcast(long jarg1);
}
