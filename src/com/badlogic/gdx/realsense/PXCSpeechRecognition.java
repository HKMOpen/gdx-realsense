/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.realsense;

public class PXCSpeechRecognition extends PXCBase {
  private long swigCPtr;

  protected PXCSpeechRecognition(long cPtr, boolean cMemoryOwn) {
    super(realsenseJNI.PXCSpeechRecognition_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PXCSpeechRecognition obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  static public class NBest {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected NBest(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(NBest obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCSpeechRecognition_NBest(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setLabel(int value) {
      realsenseJNI.PXCSpeechRecognition_NBest_label_set(swigCPtr, this, value);
    }
  
    public int getLabel() {
      return realsenseJNI.PXCSpeechRecognition_NBest_label_get(swigCPtr, this);
    }
  
    public void setConfidence(int value) {
      realsenseJNI.PXCSpeechRecognition_NBest_confidence_set(swigCPtr, this, value);
    }
  
    public int getConfidence() {
      return realsenseJNI.PXCSpeechRecognition_NBest_confidence_get(swigCPtr, this);
    }
  
    public void setSentence(SWIGTYPE_p_wchar_t value) {
      realsenseJNI.PXCSpeechRecognition_NBest_sentence_set(swigCPtr, this, SWIGTYPE_p_wchar_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_wchar_t getSentence() {
      long cPtr = realsenseJNI.PXCSpeechRecognition_NBest_sentence_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
    }
  
    public void setTags(SWIGTYPE_p_wchar_t value) {
      realsenseJNI.PXCSpeechRecognition_NBest_tags_set(swigCPtr, this, SWIGTYPE_p_wchar_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_wchar_t getTags() {
      long cPtr = realsenseJNI.PXCSpeechRecognition_NBest_tags_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
    }
  
    public NBest() {
      this(realsenseJNI.new_PXCSpeechRecognition_NBest(), true);
    }
  
  }

  static public class RecognitionData {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected RecognitionData(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(RecognitionData obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCSpeechRecognition_RecognitionData(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setTimeStamp(SWIGTYPE_p___int64 value) {
      realsenseJNI.PXCSpeechRecognition_RecognitionData_timeStamp_set(swigCPtr, this, SWIGTYPE_p___int64.getCPtr(value));
    }
  
    public SWIGTYPE_p___int64 getTimeStamp() {
      return new SWIGTYPE_p___int64(realsenseJNI.PXCSpeechRecognition_RecognitionData_timeStamp_get(swigCPtr, this), true);
    }
  
    public void setGrammar(int value) {
      realsenseJNI.PXCSpeechRecognition_RecognitionData_grammar_set(swigCPtr, this, value);
    }
  
    public int getGrammar() {
      return realsenseJNI.PXCSpeechRecognition_RecognitionData_grammar_get(swigCPtr, this);
    }
  
    public void setDuration(int value) {
      realsenseJNI.PXCSpeechRecognition_RecognitionData_duration_set(swigCPtr, this, value);
    }
  
    public int getDuration() {
      return realsenseJNI.PXCSpeechRecognition_RecognitionData_duration_get(swigCPtr, this);
    }
  
    public void setScores(PXCSpeechRecognition.NBest value) {
      realsenseJNI.PXCSpeechRecognition_RecognitionData_scores_set(swigCPtr, this, PXCSpeechRecognition.NBest.getCPtr(value), value);
    }
  
    public PXCSpeechRecognition.NBest getScores() {
      long cPtr = realsenseJNI.PXCSpeechRecognition_RecognitionData_scores_get(swigCPtr, this);
      return (cPtr == 0) ? null : new PXCSpeechRecognition.NBest(cPtr, false);
    }
  
    public void setReserved(SWIGTYPE_p_int value) {
      realsenseJNI.PXCSpeechRecognition_RecognitionData_reserved_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
    }
  
    public SWIGTYPE_p_int getReserved() {
      long cPtr = realsenseJNI.PXCSpeechRecognition_RecognitionData_reserved_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
    }
  
    public RecognitionData() {
      this(realsenseJNI.new_PXCSpeechRecognition_RecognitionData(), true);
    }
  
  }

  static public class AlertData {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected AlertData(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(AlertData obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCSpeechRecognition_AlertData(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setTimeStamp(SWIGTYPE_p___int64 value) {
      realsenseJNI.PXCSpeechRecognition_AlertData_timeStamp_set(swigCPtr, this, SWIGTYPE_p___int64.getCPtr(value));
    }
  
    public SWIGTYPE_p___int64 getTimeStamp() {
      return new SWIGTYPE_p___int64(realsenseJNI.PXCSpeechRecognition_AlertData_timeStamp_get(swigCPtr, this), true);
    }
  
    public void setLabel(PXCSpeechRecognition.AlertType value) {
      realsenseJNI.PXCSpeechRecognition_AlertData_label_set(swigCPtr, this, value.swigValue());
    }
  
    public PXCSpeechRecognition.AlertType getLabel() {
      return PXCSpeechRecognition.AlertType.swigToEnum(realsenseJNI.PXCSpeechRecognition_AlertData_label_get(swigCPtr, this));
    }
  
    public void setReserved(SWIGTYPE_p_int value) {
      realsenseJNI.PXCSpeechRecognition_AlertData_reserved_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
    }
  
    public SWIGTYPE_p_int getReserved() {
      long cPtr = realsenseJNI.PXCSpeechRecognition_AlertData_reserved_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
    }
  
    public AlertData() {
      this(realsenseJNI.new_PXCSpeechRecognition_AlertData(), true);
    }
  
  }

  static public class Handler {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected Handler(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(Handler obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCSpeechRecognition_Handler(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void OnRecognition(PXCSpeechRecognition.RecognitionData arg0) {
      realsenseJNI.PXCSpeechRecognition_Handler_OnRecognition(swigCPtr, this, PXCSpeechRecognition.RecognitionData.getCPtr(arg0), arg0);
    }
  
    public void OnAlert(PXCSpeechRecognition.AlertData arg0) {
      realsenseJNI.PXCSpeechRecognition_Handler_OnAlert(swigCPtr, this, PXCSpeechRecognition.AlertData.getCPtr(arg0), arg0);
    }
  
    public Handler() {
      this(realsenseJNI.new_PXCSpeechRecognition_Handler(), true);
    }
  
  }

  static public class ProfileInfo {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected ProfileInfo(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(ProfileInfo obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCSpeechRecognition_ProfileInfo(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setSpeaker(SWIGTYPE_p_wchar_t value) {
      realsenseJNI.PXCSpeechRecognition_ProfileInfo_speaker_set(swigCPtr, this, SWIGTYPE_p_wchar_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_wchar_t getSpeaker() {
      long cPtr = realsenseJNI.PXCSpeechRecognition_ProfileInfo_speaker_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
    }
  
    public void setLanguage(PXCSpeechRecognition.LanguageType value) {
      realsenseJNI.PXCSpeechRecognition_ProfileInfo_language_set(swigCPtr, this, value.swigValue());
    }
  
    public PXCSpeechRecognition.LanguageType getLanguage() {
      return PXCSpeechRecognition.LanguageType.swigToEnum(realsenseJNI.PXCSpeechRecognition_ProfileInfo_language_get(swigCPtr, this));
    }
  
    public void setEndOfSentence(int value) {
      realsenseJNI.PXCSpeechRecognition_ProfileInfo_endOfSentence_set(swigCPtr, this, value);
    }
  
    public int getEndOfSentence() {
      return realsenseJNI.PXCSpeechRecognition_ProfileInfo_endOfSentence_get(swigCPtr, this);
    }
  
    public void setThreshold(int value) {
      realsenseJNI.PXCSpeechRecognition_ProfileInfo_threshold_set(swigCPtr, this, value);
    }
  
    public int getThreshold() {
      return realsenseJNI.PXCSpeechRecognition_ProfileInfo_threshold_get(swigCPtr, this);
    }
  
    public void setReserved(SWIGTYPE_p_int value) {
      realsenseJNI.PXCSpeechRecognition_ProfileInfo_reserved_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
    }
  
    public SWIGTYPE_p_int getReserved() {
      long cPtr = realsenseJNI.PXCSpeechRecognition_ProfileInfo_reserved_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
    }
  
    public ProfileInfo() {
      this(realsenseJNI.new_PXCSpeechRecognition_ProfileInfo(), true);
    }
  
  }

  public pxcStatus QueryProfile(int idx, PXCSpeechRecognition.ProfileInfo pinfo) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_QueryProfile__SWIG_0(swigCPtr, this, idx, PXCSpeechRecognition.ProfileInfo.getCPtr(pinfo), pinfo));
  }

  public pxcStatus QueryProfile(PXCSpeechRecognition.ProfileInfo pinfo) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_QueryProfile__SWIG_1(swigCPtr, this, PXCSpeechRecognition.ProfileInfo.getCPtr(pinfo), pinfo));
  }

  public pxcStatus SetProfile(PXCSpeechRecognition.ProfileInfo config) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_SetProfile(swigCPtr, this, PXCSpeechRecognition.ProfileInfo.getCPtr(config), config));
  }

  public pxcStatus BuildGrammarFromStringList(int gid, SWIGTYPE_p_p_wchar_t cmds, SWIGTYPE_p_int labels, int ncmds) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_BuildGrammarFromStringList(swigCPtr, this, gid, SWIGTYPE_p_p_wchar_t.getCPtr(cmds), SWIGTYPE_p_int.getCPtr(labels), ncmds));
  }

  public pxcStatus ReleaseGrammar(int gid) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_ReleaseGrammar(swigCPtr, this, gid));
  }

  public pxcStatus SetGrammar(int gid) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_SetGrammar(swigCPtr, this, gid));
  }

  public pxcStatus SetDictation() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_SetDictation(swigCPtr, this));
  }

  public pxcStatus StartRec(PXCAudioSource source, PXCSpeechRecognition.Handler handler) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_StartRec(swigCPtr, this, PXCAudioSource.getCPtr(source), source, PXCSpeechRecognition.Handler.getCPtr(handler), handler));
  }

  public void StopRec() {
    realsenseJNI.PXCSpeechRecognition_StopRec(swigCPtr, this);
  }

  public pxcStatus BuildGrammarFromFile(int gid, PXCSpeechRecognition.GrammarFileType fileType, SWIGTYPE_p_wchar_t grammarFilename) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_BuildGrammarFromFile(swigCPtr, this, gid, fileType.swigValue(), SWIGTYPE_p_wchar_t.getCPtr(grammarFilename)));
  }

  public pxcStatus BuildGrammarFromMemory(int gid, PXCSpeechRecognition.GrammarFileType fileType, SWIGTYPE_p_void grammarMemory, int memSize) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_BuildGrammarFromMemory(swigCPtr, this, gid, fileType.swigValue(), SWIGTYPE_p_void.getCPtr(grammarMemory), memSize));
  }

  public SWIGTYPE_p_wchar_t GetGrammarCompileErrors(int gid) {
    long cPtr = realsenseJNI.PXCSpeechRecognition_GetGrammarCompileErrors(swigCPtr, this, gid);
    return (cPtr == 0) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
  }

  public pxcStatus AddVocabToDictation(PXCSpeechRecognition.VocabFileType fileType, SWIGTYPE_p_wchar_t vocabFileName) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSpeechRecognition_AddVocabToDictation(swigCPtr, this, fileType.swigValue(), SWIGTYPE_p_wchar_t.getCPtr(vocabFileName)));
  }

  public final static int CUID = realsenseJNI.PXCSpeechRecognition_CUID_get();

  public final static int NBEST_SIZE = realsenseJNI.PXCSpeechRecognition_NBEST_SIZE_get();

  public final static int SENTENCE_BUFFER_SIZE = realsenseJNI.PXCSpeechRecognition_SENTENCE_BUFFER_SIZE_get();

  public final static int TAG_BUFFER_SIZE = realsenseJNI.PXCSpeechRecognition_TAG_BUFFER_SIZE_get();

  public final static class AlertType {
    public final static PXCSpeechRecognition.AlertType ALERT_VOLUME_HIGH = new PXCSpeechRecognition.AlertType("ALERT_VOLUME_HIGH", realsenseJNI.PXCSpeechRecognition_ALERT_VOLUME_HIGH_get());
    public final static PXCSpeechRecognition.AlertType ALERT_VOLUME_LOW = new PXCSpeechRecognition.AlertType("ALERT_VOLUME_LOW", realsenseJNI.PXCSpeechRecognition_ALERT_VOLUME_LOW_get());
    public final static PXCSpeechRecognition.AlertType ALERT_SNR_LOW = new PXCSpeechRecognition.AlertType("ALERT_SNR_LOW", realsenseJNI.PXCSpeechRecognition_ALERT_SNR_LOW_get());
    public final static PXCSpeechRecognition.AlertType ALERT_SPEECH_UNRECOGNIZABLE = new PXCSpeechRecognition.AlertType("ALERT_SPEECH_UNRECOGNIZABLE", realsenseJNI.PXCSpeechRecognition_ALERT_SPEECH_UNRECOGNIZABLE_get());
    public final static PXCSpeechRecognition.AlertType ALERT_SPEECH_BEGIN = new PXCSpeechRecognition.AlertType("ALERT_SPEECH_BEGIN", realsenseJNI.PXCSpeechRecognition_ALERT_SPEECH_BEGIN_get());
    public final static PXCSpeechRecognition.AlertType ALERT_SPEECH_END = new PXCSpeechRecognition.AlertType("ALERT_SPEECH_END", realsenseJNI.PXCSpeechRecognition_ALERT_SPEECH_END_get());
    public final static PXCSpeechRecognition.AlertType ALERT_RECOGNITION_ABORTED = new PXCSpeechRecognition.AlertType("ALERT_RECOGNITION_ABORTED", realsenseJNI.PXCSpeechRecognition_ALERT_RECOGNITION_ABORTED_get());
    public final static PXCSpeechRecognition.AlertType ALERT_RECOGNITION_END = new PXCSpeechRecognition.AlertType("ALERT_RECOGNITION_END", realsenseJNI.PXCSpeechRecognition_ALERT_RECOGNITION_END_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AlertType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AlertType.class + " with value " + swigValue);
    }

    private AlertType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AlertType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AlertType(String swigName, AlertType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AlertType[] swigValues = { ALERT_VOLUME_HIGH, ALERT_VOLUME_LOW, ALERT_SNR_LOW, ALERT_SPEECH_UNRECOGNIZABLE, ALERT_SPEECH_BEGIN, ALERT_SPEECH_END, ALERT_RECOGNITION_ABORTED, ALERT_RECOGNITION_END };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class LanguageType {
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_US_ENGLISH = new PXCSpeechRecognition.LanguageType("LANGUAGE_US_ENGLISH", realsenseJNI.PXCSpeechRecognition_LANGUAGE_US_ENGLISH_get());
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_GB_ENGLISH = new PXCSpeechRecognition.LanguageType("LANGUAGE_GB_ENGLISH", realsenseJNI.PXCSpeechRecognition_LANGUAGE_GB_ENGLISH_get());
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_DE_GERMAN = new PXCSpeechRecognition.LanguageType("LANGUAGE_DE_GERMAN", realsenseJNI.PXCSpeechRecognition_LANGUAGE_DE_GERMAN_get());
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_US_SPANISH = new PXCSpeechRecognition.LanguageType("LANGUAGE_US_SPANISH", realsenseJNI.PXCSpeechRecognition_LANGUAGE_US_SPANISH_get());
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_FR_FRENCH = new PXCSpeechRecognition.LanguageType("LANGUAGE_FR_FRENCH", realsenseJNI.PXCSpeechRecognition_LANGUAGE_FR_FRENCH_get());
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_IT_ITALIAN = new PXCSpeechRecognition.LanguageType("LANGUAGE_IT_ITALIAN", realsenseJNI.PXCSpeechRecognition_LANGUAGE_IT_ITALIAN_get());
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_JP_JAPANESE = new PXCSpeechRecognition.LanguageType("LANGUAGE_JP_JAPANESE", realsenseJNI.PXCSpeechRecognition_LANGUAGE_JP_JAPANESE_get());
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_CN_CHINESE = new PXCSpeechRecognition.LanguageType("LANGUAGE_CN_CHINESE", realsenseJNI.PXCSpeechRecognition_LANGUAGE_CN_CHINESE_get());
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_BR_PORTUGUESE = new PXCSpeechRecognition.LanguageType("LANGUAGE_BR_PORTUGUESE", realsenseJNI.PXCSpeechRecognition_LANGUAGE_BR_PORTUGUESE_get());
    public final static PXCSpeechRecognition.LanguageType LANGUAGE_RU_RUSSIAN = new PXCSpeechRecognition.LanguageType("LANGUAGE_RU_RUSSIAN", realsenseJNI.PXCSpeechRecognition_LANGUAGE_RU_RUSSIAN_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static LanguageType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + LanguageType.class + " with value " + swigValue);
    }

    private LanguageType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private LanguageType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private LanguageType(String swigName, LanguageType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static LanguageType[] swigValues = { LANGUAGE_US_ENGLISH, LANGUAGE_GB_ENGLISH, LANGUAGE_DE_GERMAN, LANGUAGE_US_SPANISH, LANGUAGE_FR_FRENCH, LANGUAGE_IT_ITALIAN, LANGUAGE_JP_JAPANESE, LANGUAGE_CN_CHINESE, LANGUAGE_BR_PORTUGUESE, LANGUAGE_RU_RUSSIAN };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class GrammarFileType {
    public final static PXCSpeechRecognition.GrammarFileType GFT_NONE = new PXCSpeechRecognition.GrammarFileType("GFT_NONE", realsenseJNI.PXCSpeechRecognition_GFT_NONE_get());
    public final static PXCSpeechRecognition.GrammarFileType GFT_LIST = new PXCSpeechRecognition.GrammarFileType("GFT_LIST", realsenseJNI.PXCSpeechRecognition_GFT_LIST_get());
    public final static PXCSpeechRecognition.GrammarFileType GFT_JSGF = new PXCSpeechRecognition.GrammarFileType("GFT_JSGF", realsenseJNI.PXCSpeechRecognition_GFT_JSGF_get());
    public final static PXCSpeechRecognition.GrammarFileType GFT_COMPILED_CONTEXT = new PXCSpeechRecognition.GrammarFileType("GFT_COMPILED_CONTEXT", realsenseJNI.PXCSpeechRecognition_GFT_COMPILED_CONTEXT_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static GrammarFileType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + GrammarFileType.class + " with value " + swigValue);
    }

    private GrammarFileType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private GrammarFileType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private GrammarFileType(String swigName, GrammarFileType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static GrammarFileType[] swigValues = { GFT_NONE, GFT_LIST, GFT_JSGF, GFT_COMPILED_CONTEXT };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class VocabFileType {
    public final static PXCSpeechRecognition.VocabFileType VFT_NONE = new PXCSpeechRecognition.VocabFileType("VFT_NONE", realsenseJNI.PXCSpeechRecognition_VFT_NONE_get());
    public final static PXCSpeechRecognition.VocabFileType VFT_LIST = new PXCSpeechRecognition.VocabFileType("VFT_LIST", realsenseJNI.PXCSpeechRecognition_VFT_LIST_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static VocabFileType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + VocabFileType.class + " with value " + swigValue);
    }

    private VocabFileType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private VocabFileType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private VocabFileType(String swigName, VocabFileType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static VocabFileType[] swigValues = { VFT_NONE, VFT_LIST };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
