/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.realsense;

public class PXCSenseManager extends PXCBase {
  private long swigCPtr;

  protected PXCSenseManager(long cPtr, boolean cMemoryOwn) {
    super(realsenseJNI.PXCSenseManager_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PXCSenseManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  static public class Handler {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected Handler(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(Handler obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          realsenseJNI.delete_PXCSenseManager_Handler(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public pxcStatus OnConnect(PXCCapture.Device arg0, int arg1) {
      return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Handler_OnConnect(swigCPtr, this, PXCCapture.Device.getCPtr(arg0), arg0, arg1));
    }
  
    public pxcStatus OnModuleSetProfile(int arg0, PXCBase arg1) {
      return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Handler_OnModuleSetProfile(swigCPtr, this, arg0, PXCBase.getCPtr(arg1), arg1));
    }
  
    public pxcStatus OnModuleProcessedFrame(int arg0, PXCBase arg1, PXCCapture.Sample arg2) {
      return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Handler_OnModuleProcessedFrame(swigCPtr, this, arg0, PXCBase.getCPtr(arg1), arg1, PXCCapture.Sample.getCPtr(arg2), arg2));
    }
  
    public pxcStatus OnNewSample(int arg0, PXCCapture.Sample arg1) {
      return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Handler_OnNewSample(swigCPtr, this, arg0, PXCCapture.Sample.getCPtr(arg1), arg1));
    }
  
    public Handler() {
      this(realsenseJNI.new_PXCSenseManager_Handler(), true);
    }
  
  }

  public PXCSession QuerySession() {
    long cPtr = realsenseJNI.PXCSenseManager_QuerySession(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCSession(cPtr, false);
  }

  public PXCCaptureManager QueryCaptureManager() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryCaptureManager(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCCaptureManager(cPtr, false);
  }

  public PXCCapture.Sample QuerySample(int mid) {
    long cPtr = realsenseJNI.PXCSenseManager_QuerySample__SWIG_0(swigCPtr, this, mid);
    return (cPtr == 0) ? null : new PXCCapture.Sample(cPtr, false);
  }

  public PXCCapture.Sample QuerySample() {
    long cPtr = realsenseJNI.PXCSenseManager_QuerySample__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCCapture.Sample(cPtr, false);
  }

  public PXCCapture.Sample QueryFaceSample() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryFaceSample(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCCapture.Sample(cPtr, false);
  }

  public PXCCapture.Sample QueryHandSample() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryHandSample(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCCapture.Sample(cPtr, false);
  }

  public PXCCapture.Sample QueryEmotionSample() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryEmotionSample(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCCapture.Sample(cPtr, false);
  }

  public PXCCapture.Sample QueryTrackerSample() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryTrackerSample(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCCapture.Sample(cPtr, false);
  }

  public PXCBase QueryModule(int mid) {
    long cPtr = realsenseJNI.PXCSenseManager_QueryModule(swigCPtr, this, mid);
    return (cPtr == 0) ? null : new PXCBase(cPtr, false);
  }

  public PXCFaceModule QueryFace() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryFace(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCFaceModule(cPtr, false);
  }

  public PXCEmotion QueryEmotion() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryEmotion(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCEmotion(cPtr, false);
  }

  public PXCTracker QueryTracker() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryTracker(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCTracker(cPtr, false);
  }

  public PXCHandModule QueryHand() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryHand(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCHandModule(cPtr, false);
  }

  public PXCTouchlessController QueryTouchlessController() {
    long cPtr = realsenseJNI.PXCSenseManager_QueryTouchlessController(swigCPtr, this);
    return (cPtr == 0) ? null : new PXCTouchlessController(cPtr, false);
  }

  public PXC3DSeg Query3DSeg() {
    long cPtr = realsenseJNI.PXCSenseManager_Query3DSeg(swigCPtr, this);
    return (cPtr == 0) ? null : new PXC3DSeg(cPtr, false);
  }

  public PXC3DScan Query3DScan() {
    long cPtr = realsenseJNI.PXCSenseManager_Query3DScan(swigCPtr, this);
    return (cPtr == 0) ? null : new PXC3DScan(cPtr, false);
  }

  public pxcStatus Init(PXCSenseManager.Handler handler) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Init__SWIG_0(swigCPtr, this, PXCSenseManager.Handler.getCPtr(handler), handler));
  }

  public pxcStatus Init() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Init__SWIG_1(swigCPtr, this));
  }

  public pxcStatus StreamFrames(int blocking) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_StreamFrames(swigCPtr, this, blocking));
  }

  public int IsConnected() {
    return realsenseJNI.PXCSenseManager_IsConnected(swigCPtr, this);
  }

  public pxcStatus AcquireFrame(int ifall, int timeout) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_AcquireFrame__SWIG_0(swigCPtr, this, ifall, timeout));
  }

  public pxcStatus AcquireFrame(int ifall) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_AcquireFrame__SWIG_1(swigCPtr, this, ifall));
  }

  public pxcStatus AcquireFrame() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_AcquireFrame__SWIG_2(swigCPtr, this));
  }

  public void FlushFrame() {
    realsenseJNI.PXCSenseManager_FlushFrame(swigCPtr, this);
  }

  public void ReleaseFrame() {
    realsenseJNI.PXCSenseManager_ReleaseFrame(swigCPtr, this);
  }

  public void Close() {
    realsenseJNI.PXCSenseManager_Close(swigCPtr, this);
  }

  public pxcStatus EnableStreams(PXCVideoModule.DataDesc sdesc) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableStreams(swigCPtr, this, PXCVideoModule.DataDesc.getCPtr(sdesc), sdesc));
  }

  public pxcStatus EnableStream(PXCCapture.StreamType type, int width, int height, float fps) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableStream__SWIG_0(swigCPtr, this, type.swigValue(), width, height, fps));
  }

  public pxcStatus EnableStream(PXCCapture.StreamType type, int width, int height) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableStream__SWIG_1(swigCPtr, this, type.swigValue(), width, height));
  }

  public pxcStatus EnableStream(PXCCapture.StreamType type, int width) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableStream__SWIG_2(swigCPtr, this, type.swigValue(), width));
  }

  public pxcStatus EnableStream(PXCCapture.StreamType type) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableStream__SWIG_3(swigCPtr, this, type.swigValue()));
  }

  public pxcStatus EnableModule(int mid, PXCSession.ImplDesc mdesc) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableModule(swigCPtr, this, mid, PXCSession.ImplDesc.getCPtr(mdesc), mdesc));
  }

  public pxcStatus EnableFace(SWIGTYPE_p_wchar_t name) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableFace__SWIG_0(swigCPtr, this, SWIGTYPE_p_wchar_t.getCPtr(name)));
  }

  public pxcStatus EnableFace() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableFace__SWIG_1(swigCPtr, this));
  }

  public pxcStatus EnableEmotion() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableEmotion(swigCPtr, this));
  }

  public pxcStatus EnableTracker() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableTracker(swigCPtr, this));
  }

  public pxcStatus EnableHand(SWIGTYPE_p_wchar_t name) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableHand__SWIG_0(swigCPtr, this, SWIGTYPE_p_wchar_t.getCPtr(name)));
  }

  public pxcStatus EnableHand() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableHand__SWIG_1(swigCPtr, this));
  }

  public pxcStatus EnableTouchlessController() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_EnableTouchlessController(swigCPtr, this));
  }

  public pxcStatus Enable3DSeg(SWIGTYPE_p_wchar_t name) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Enable3DSeg__SWIG_0(swigCPtr, this, SWIGTYPE_p_wchar_t.getCPtr(name)));
  }

  public pxcStatus Enable3DSeg() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Enable3DSeg__SWIG_1(swigCPtr, this));
  }

  public pxcStatus Enable3DScan(SWIGTYPE_p_wchar_t name) {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Enable3DScan__SWIG_0(swigCPtr, this, SWIGTYPE_p_wchar_t.getCPtr(name)));
  }

  public pxcStatus Enable3DScan() {
    return pxcStatus.swigToEnum(realsenseJNI.PXCSenseManager_Enable3DScan__SWIG_1(swigCPtr, this));
  }

  public void PauseModule(int mid, int pause) {
    realsenseJNI.PXCSenseManager_PauseModule(swigCPtr, this, mid, pause);
  }

  public void PauseFace(int pause) {
    realsenseJNI.PXCSenseManager_PauseFace(swigCPtr, this, pause);
  }

  public void PauseEmotion(int pause) {
    realsenseJNI.PXCSenseManager_PauseEmotion(swigCPtr, this, pause);
  }

  public void PauseTracker(int pause) {
    realsenseJNI.PXCSenseManager_PauseTracker(swigCPtr, this, pause);
  }

  public void PauseHand(int pause) {
    realsenseJNI.PXCSenseManager_PauseHand(swigCPtr, this, pause);
  }

  public void PauseTouchlessController(int pause) {
    realsenseJNI.PXCSenseManager_PauseTouchlessController(swigCPtr, this, pause);
  }

  public void Pause3DSeg(int pause) {
    realsenseJNI.PXCSenseManager_Pause3DSeg(swigCPtr, this, pause);
  }

  public static PXCSenseManager CreateInstance() {
    long cPtr = realsenseJNI.PXCSenseManager_CreateInstance();
    return (cPtr == 0) ? null : new PXCSenseManager(cPtr, false);
  }

  public final static int CUID = realsenseJNI.PXCSenseManager_CUID_get();

  public final static int TIMEOUT_INFINITE = realsenseJNI.PXCSenseManager_TIMEOUT_INFINITE_get();

}
